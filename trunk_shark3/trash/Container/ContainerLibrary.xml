<?xml version="1.0" encoding="UTF-8"?>

<library name="Container" directory="Data/Container">
  <include file="lbcpp/Core/Vector.h"/>
  
  <!-- DecoratorContainer -->
  <template name="DecoratorContainer" base="Container[elementsType]" abstract="yes">
    <variable type="Container[Object]" name="target"/>
    <parameter name="elementsType"/>
  </template>

  <template name="RangeContainer" base="DecoratorContainer[elementsType]">
    <parameter name="elementsType"/>
    <constructor arguments="ContainerPtr target, size_t begin, size_t end" parameters="target->getElementsType()"/>
  </template>
  
  <template name="ExcludeRangeContainer" base="DecoratorContainer[elementsType]">
    <parameter name="elementsType"/>
    <constructor arguments="ContainerPtr target, size_t begin, size_t end" parameters="target->getElementsType()"/>
  </template>
  
  <template name="DuplicatedContainer" base="DecoratorContainer[elementsType]">
    <parameter name="elementsType"/>
    <constructor arguments="ContainerPtr target, size_t count" parameters="target->getElementsType()"/>
  </template>
  
  <template name="SubsetContainer" base="DecoratorContainer[elementsType]">
    <parameter name="elementsType"/>
    <constructor arguments="ContainerPtr target, const std::vector&lt;size_t&gt;&amp; indices" parameters="target->getElementsType()"/>
  </template>
  
</library>
