<?xml version="1.0" encoding="UTF-8"?>

<library name="NearestNeighbor" directory="Learning/NearestNeighbor">

  <!-- NearestNeighborFunction -->
  <class name="NearestNeighborFunction" base="Function" abstract="yes">
    <variable type="PositiveInteger" name="numNeighbors"/>
    <variable type="Boolean" name="includeTheNearestNeighbor"/>
<!--    <variable type="GenericVector[SparseDoubleVector]" name="inputData"/>
    <variable type="VariableVector" name="supervisionData"/> -->
  </class>

  <class name="BinaryNearestNeighbor" base="NearestNeighborFunction">
    <constructor arguments="size_t numNeighbors, bool includeTheNearestNeighbor, bool useWeightedScore" returnType="Function"/>
    <variable type="Boolean" name="useWeightedScore"/>
  </class>

  <class name="RegressionNearestNeighbor" base="NearestNeighborFunction">
    <constructor arguments="size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
  </class>

  <class name="ClassificationNearestNeighbor" base="NearestNeighborFunction">
    <constructor arguments="size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
    <variable type="Enumeration" name="enumeration"/>
  </class>

  <class name="NearestNeighborBatchLearner" base="BatchLearner">
    <constructor/>
  </class>

  <class name="NearestNeighborLearningMachine" base="ProxyFunction">
    <constructor arguments="size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
    <constructor arguments="const StreamPtr&amp; stream, size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
    <variable type="Stream" name="stream"/>
    <variable type="PositiveInteger" name="numNeighbors"/>
    <variable type="Boolean" name="includeTheNearestNeighbor"/>
  </class>

  <!-- Stream Based Nearest Neighbor -->
  <class name="StreamBasedNearestNeighbor" base="Function" abstract="yes">
    <variable type="Stream" name="stream"/>
    <variable type="PositiveInteger" name="numNeighbors"/>
    <variable type="Boolean" name="includeTheNearestNeighbor"/>
    <variable type="GenericVector[Double]" name="standardDeviation"/>
  </class>

  <class name="ClassificationStreamBasedNearestNeighbor" base="StreamBasedNearestNeighbor">
    <constructor arguments="const StreamPtr&amp; stream, size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
    <constructor arguments="size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
    <variable type="Enumeration" name="enumeration"/>
  </class>

  <class name="BinaryClassificationStreamBasedNearestNeighbor" base="StreamBasedNearestNeighbor">
    <constructor arguments="const StreamPtr&amp; stream, size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
    <constructor arguments="size_t numNeighbors, bool includeTheNearestNeighbor" returnType="Function"/>
  </class>

  <class name="StreamBasedNearestNeighborBatchLearner" base="BatchLearner">
    <constructor/>
  </class>

</library>
