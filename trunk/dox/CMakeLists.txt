FIND_PACKAGE(Doxygen)

MACRO   (MAKE_NATIVE_PATH OUTPUT_PATH_VAR INPUT_PATH)
  GET_FILENAME_COMPONENT(${OUTPUT_PATH_VAR} ${INPUT_PATH} ABSOLUTE)
  FILE(TO_NATIVE_PATH ${${OUTPUT_PATH_VAR}} ${OUTPUT_PATH_VAR})
ENDMACRO(MAKE_NATIVE_PATH)

MACRO   (ADD_FRIENDLY_CUSTOM_TARGET TARGET FRIENDLY_NAME) # COMMAND
  ADD_CUSTOM_TARGET(${TARGET})
  SET_TARGET_PROPERTIES(${TARGET} PROPERTIES PROJECT_LABEL ${FRIENDLY_NAME})
  ADD_CUSTOM_COMMAND(TARGET ${TARGET}
    POST_BUILD
    COMMAND ${ARGN}
  )
ENDMACRO(ADD_FRIENDLY_CUSTOM_TARGET)

#FIND_EXTERN_PROGRAM_WIN32(HHC_PATH hhc)
MARK_AS_ADVANCED(DOXYGEN_EXECUTABLE)

IF (DOXYGEN_FOUND)
  SET(DOX_NAME LBC++)
  SET(DOX_VERSION 1.0)
  SET(DOC_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
 
  MAKE_NATIVE_PATH(DOX_OUTPUT_DIRECTORY ${DOC_DIRECTORY})
  MAKE_NATIVE_PATH(DOX_SOURCE_DIR ${LBCpp_SOURCE_DIR}/include)
  MAKE_NATIVE_PATH(DOX_STRIP_FROM_PATH ${CMAKE_CURRENT_SOURCE_DIR})
  MAKE_NATIVE_PATH(DOX_CHM_PATH ${DOC_DIRECTORY}/lbcpp.chm)

  GET_FILENAME_COMPONENT(DOT_DIRECTORY ${DOXYGEN_DOT_EXECUTABLE} PATH)

  MAKE_NATIVE_PATH(DOX_DOT_DIRECTORY ${DOT_DIRECTORY})
#  IF   (HHC_PATH)
#    SET(DOX_GENERATE_CHM YES)
#    MAKE_NATIVE_PATH(DOX_HHC_PATH ${HHC_PATH})
#  ELSE (HHC_PATH)
#    SET(DOX_GENERATE_CHM NO)
#  ENDIF(HHC_PATH)

  SET(DOX_FILE ${DOC_DIRECTORY}/lbcpp.dox)

  SET(TEMPLATE_DOX_FILE template.dox.in)
  CONFIGURE_FILE(${TEMPLATE_DOX_FILE} ${DOX_FILE} @ONLY)
  SET(TEMPLATE_HTML_INDEX index.html.in)
  CONFIGURE_FILE(${TEMPLATE_HTML_INDEX} ${DOC_DIRECTORY}/lbcpp.html @ONLY)
  ADD_FRIENDLY_CUSTOM_TARGET(lbcpp-dox lbcpp-dox ${DOXYGEN_EXECUTABLE} ${DOX_FILE})

ENDIF (DOXYGEN_FOUND)
