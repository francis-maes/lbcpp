<?xml version="1.0" encoding="UTF-8"?>

<library name="Stream" directory="Data/Stream">
  

    <template name="Stream" abstract="yes">
      <parameter name="elementsType"/>
    </template>
    
    <template name="TextParser" base="Stream[elementsType]" abstract="yes">
      <parameter name="elementsType"/>
    </template>

    <class name="DirectoryFileStream" base="Stream[File]">
      <constructor arguments="const File&amp; directory, const String&amp; wildCardPattern, bool searchFilesRecursively"/>
    </class>

    <class name="DirectoryPairFileStream" base="Stream[Pair[File,File]]">
      <constructor arguments="const File&amp; mainDirectory, const File&amp; secondDirectory, const String&amp; wildCardPattern, bool searchFilesRecursively"/>
    </class>

    <template name="ApplyFunctionStream" base="Stream[elementsType]">
      <parameter name="elementsType"/>

      <constructor arguments="StreamPtr stream, FunctionPtr function" parameters="function->getOutputType(stream->getElementsType())"/>

      <variable type="Stream[Variable]" name="stream"/>
      <variable type="Function" name="function"/>
    </template>

    <!-- Consumer -->
    <class name="SaveToFileConsumer" base="Consumer">
      <constructor arguments="const File&amp; outputDirectory"/>
    </class>
    
   
</library>
