<?xml version="1.0" encoding="UTF-8"?>

<file name="Type" directory="Data/Type">
  <namespace name="lbcpp">
    <!-- Object -->
    <class name="NameableObject" abstract="yes">
      <variable type="String" name="name"/>
    </class>

    <!-- Type -->
    <class name="Type" base="NameableObject" abstract="yes">
      <variable type="Type" name="baseType"/>
      <!--      <variable type="TemplateType" name="templateType"/> 
      <variable type="Vector[Type]" name="templateArguments"/> -->
      <code>
        virtual VariableValue createFromString(const String&amp; value, ErrorHandler&amp; callback) const
        {return Type::get(value, callback);}

        virtual VariableValue createFromXml(XmlElement* xml, ErrorHandler&amp; callback) const
        {return createFromString(xml->getAllSubText(), callback);}
      </code>
    </class>

    <class name="Enumeration" base="Type" abstract="yes">
      <variable type="String" name="oneLetterCodes"/>
      <code>
        virtual VariableValue createFromString(const String&amp; value, ErrorHandler&amp; callback) const
        {return Type::get(value, callback);}

        virtual VariableValue createFromXml(XmlElement* xml, ErrorHandler&amp; callback) const
        {return createFromString(xml->getAllSubText(), callback);}
      </code>
    </class>
   
  </namespace>
</file>
