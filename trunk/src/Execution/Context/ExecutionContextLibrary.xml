<?xml version="1.0" encoding="UTF-8"?>

<library name="ExecutionContext" directory="Execution/Context">

  <class name="SingleThreadedExecutionContext" base="ExecutionContext">
    <constructor arguments="const File&amp; projectDirectory"/>
  </class>

  <class name="SubExecutionContext" base="ExecutionContext" abstract="yes"/>
  <class name="ThreadOwnedExecutionContext" base="SubExecutionContext"/>

  <class name="MultiThreadedExecutionContext" base="ExecutionContext">
    <constructor arguments="size_t numThreads, const File&amp; projectDirectory"/>
  </class>

  <class name="DistributedExecutionContext" base="SubExecutionContext">
    <constructor arguments="ExecutionContext&amp; parentContext, const String&amp; remoteHostName, size_t remotePort, const String&amp; project, const String&amp; from, const std::vector&lt;String&gt;&amp; to, const ResourceEstimatorPtr&amp; resourceEstimator, bool importTrace" returnType="ExecutionContext"/>
    <constructor arguments="ExecutionContext&amp; parentContext, const String&amp; remoteHostName, size_t remotePort, const String&amp; project, const String&amp; from, const String&amp; to, const ResourceEstimatorPtr&amp; resourceEstimator, bool importTrace" returnType="ExecutionContext"/>
  </class>

  <class name="FixedResourceEstimator" base="ResourceEstimator">
    <constructor arguments="size_t requiredCpus, size_t requiredMemory, size_t requiredTime"/>
    <variable type="PositiveInteger" name="requiredMemory"/>
    <variable type="PositiveInteger" name="requiredTime"/>
    <variable type="PositiveInteger" name="requiredCpus"/>
  </class>

</library>
