<?xml version="1.0" encoding="UTF-8"?>

<file name="Execution" directory="lbcpp/Execution">

  <include file="lbcpp/Data/Vector.h"/>
  <include file="lbcpp/Execution/ExecutionContext.h"/>
  <include file="lbcpp/Execution/WorkUnit.h"/>
  <include file="lbcpp/Execution/FunctionStack.h"/>
  <import name="ExecutionCallback"/>
  <import name="ExecutionContext"/>

  <namespace name="lbcpp">

    <!-- Work Unit -->
    <class name="WorkUnit" base="NameableObject" abstract="yes"/>
    <class name="DecoratorWorkUnit" base="WorkUnit">
      <variable type="WorkUnit" name="decorated"/>
    </class>

    <!-- Function Stack -->
    <class name="FunctionStack">
      <variable type="ObjectVector[Inference]" name="stack"/>
    </class>

    <!-- Execution Context -->
    <class name="ExecutionCallback" base="Object" abstract="yes"/>
    <class name="ExecutionContext" base="ExecutionCallback" abstract="yes">
      <variable type="ObjectVector[ExecutionCallback]" name="callbacks"/>
    </class>

  </namespace>

</file>
