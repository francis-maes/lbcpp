<?xml version="1.0" encoding="UTF-8"?>

<library name="Execution" directory="Execution">

  <include file="lbcpp/Core/Pair.h"/>
  <include file="lbcpp/Core/Vector.h"/>
  <include file="lbcpp/Execution/ExecutionContext.h"/>
  <include file="lbcpp/Execution/WorkUnit.h"/>
  <include file="lbcpp/Execution/ExecutionStack.h"/>
  <include file="lbcpp/Execution/ExecutionTrace.h"/>
  <include file="lbcpp/Execution/Notification.h"/>
  <include file="lbcpp/Execution/TestUnit.h"/>

  <import name="ExecutionCallback"/>
  <import name="ExecutionContext"/>

  <!-- Work Unit -->
  <class name="WorkUnit" base="Object" abstract="yes"/>
  <class name="DecoratorWorkUnit" base="WorkUnit">
    <variable type="WorkUnit" name="decorated"/>
  </class>

  <class name="CompositeWorkUnit" base="WorkUnit">
    <variable type="ObjectVector[WorkUnit]" name="workUnits"/>
    <variable type="String" name="progressionUnit"/>
    <variable type="Boolean" name="pushChildrenIntoStack"/>
    <variable type="String" name="description"/>
  </class>
  
  <class name="FunctionWorkUnit" base="WorkUnit">
    <constructor arguments="const FunctionPtr&amp; function, const std::vector&lt;Variable&gt;&amp; input, const String&amp; description, Variable* output"/>
    <variable type="Function" name="function"/>
    <variable type="VariableVector" name="inputs"/>
    <variable type="String" name="description"/>
    <variable type="Boolean" name="sendInputAsResult"/>
  </class>

  <class name="ResourceEstimator" base="Object" abstract="yes"/>

  <!-- Test Unit -->
  <class name="TestUnit" base="WorkUnit" abstract="yes"/>

  <!-- Function Stack -->
  <class name="ExecutionStack">
    <variable type="ExecutionStack" name="parentStack"/>
    <variable type="ObjectVector[Pair[String,WorkUnit]]" name="stack"/>
  </class>

  <class name="Notification" abstract="yes"/>

  <!-- Execution Callback and Context -->
  <enumeration name="ExecutionMessageType">
    <value name="informationMessageType"/>
    <value name="warningMessageType"/>
    <value name="errorMessageType"/>
  </enumeration>

  <!-- ProgressionState -->
  <class name="ProgressionState">
    <variable type="Double" name="value"/>
    <variable type="Double" name="total"/>
    <variable type="String" name="unit"/>
  </class>

  <class name="ExecutionCallback" base="Object" abstract="yes">
    <function lang="lua" name="error"/>
    <function lang="lua" name="warning"/>
    <function lang="lua" name="information"/>
    <function lang="lua" name="progress"/>
    <function lang="lua" name="result"/>
  </class>
  
  <class name="CompositeExecutionCallback" base="ExecutionCallback" abstract="yes">
    <variable type="ObjectVector[ExecutionCallback]" name="callbacks"/>
  </class>
  <class name="DispatchByThreadExecutionCallback" base="CompositeExecutionCallback" abstract="yes"/>

<!--  <class name="ExecutionContextCallback" abstract="yes"/> -->

  <class name="ExecutionContext" base="CompositeExecutionCallback" abstract="yes">
    <variable type="ExecutionStack" name="stack"/>
    <variable type="File" name="projectDirectory"/>
    <variable type="RandomGenerator" name="randomGenerator"/>
    
    <function lang="lua" name="enter"/>
    <function lang="lua" name="leave"/>
    <function lang="lua" name="call"/>
    <function lang="lua" name="push"/>
    <function lang="lua" name="run"/>
    <function lang="lua" name="sleep"/>
    <function lang="lua" name="random"/>
    <function lang="lua" name="connect"/>
  </class>

  <!--
    -- ExecutionTrace
    -->
  <class name="ExecutionTraceItem" base="Object" abstract="yes">
    <variable type="Time" name="time"/>
  </class>

  <class name="MessageExecutionTraceItem" base="ExecutionTraceItem">
    <variable type="ExecutionMessageType" name="messageType" enumeration="yes"/>
    <variable type="String" name="what"/>
    <variable type="String" name="where"/>
  </class>

  <class name="ExecutionTraceNode" base="ExecutionTraceItem">
    <variable type="String" name="description"/>
    <variable type="ObjectVector[ExecutionTraceItem]" name="subItems"/>
    <variable type="Variable" name="returnValue"/>
    <variable type="ObjectVector[Pair[String,Variable]]" name="results"/>
    <variable type="ProgressionState" name="progression"/>
    <variable type="Time" name="timeLength"/>
  </class>

  <class name="ExecutionTrace" base="Object">
    <variable type="String" name="operatingSystem" shortName="os"/>
    <variable type="Boolean" name="is64BitOs" shortName="x64"/>
    <variable type="PositiveInteger" name="numCpus" shortName="cpus"/>
    <variable type="Integer" name="cpuSpeedInMegaherz" shortName="freq"/>
    <variable type="Integer" name="memoryInMegabytes" shortName="mem"/>
    <variable type="String" name="context" shortName="ctx"/>

    <variable type="ExecutionTraceNode" name="root"/>
  </class>

</library>
