<?xml version="1.0" encoding="UTF-8"?>

<file name="MetaInference" directory="Inference/MetaInference">

  <namespace name="lbcpp">

    <class name="RunOnSupervisedExamplesSequentialInference" base="SequentialInference">
      <constructor arguments="InferencePtr inference"/>
    </class>

    <class name="RunOnSupervisedExamplesParallelInference" base="ParallelInference">
      <constructor arguments="InferencePtr inference"/>
    </class>

    <code>
      InferencePtr runOnSupervisedExamplesInference(InferencePtr inference, bool doInParallel)
      {
        if (doInParallel)
          return runOnSupervisedExamplesParallelInference(inference);
        else
         return runOnSupervisedExamplesSequentialInference(inference);
      }
    </code>

    <class name="CrossValidateStepInference" base="Inference">
      <variable type="Evaluator" name="evaluator"/>
      <variable type="Inference" name="inferenceModel"/>
    </class>
    
    <class name="CrossValidationInference" base="SharedParallelInference">
      <constructor arguments="const String&amp; name, EvaluatorPtr evaluator, InferencePtr inferenceModel, size_t numFolds"/>
      <variable type="Inference" name="inferenceModel"/>
      <variable type="Integer" name="numFolds"/>
    </class>
    
    <class name="CallbackBasedDecoratorInference" base="StaticDecoratorInference">
      <constructor arguments="const String&amp; name, InferencePtr decoratedInference, InferenceCallbackPtr callback"/>
    </class>

  </namespace>
  
</file>
