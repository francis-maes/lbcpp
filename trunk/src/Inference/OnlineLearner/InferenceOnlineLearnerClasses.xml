<?xml version="1.0" encoding="UTF-8"?>

<file name="InferenceOnlineLearner" directory="Inference/OnlineLearner">

  <namespace name="lbcpp">

    <enumeration name="LearnerUpdateFrequency">
      <value name="never"/>
      <value name="perStep"/>
      <value name="perEpisode"/>
      <value name="perPass"/>
      <value name="perStepMiniBatch"/>

      <code>
        VariableValue createFromString(const String&amp; value, MessageCallback&amp; callback) const
        {
          String str = value.trim();
          if (str.startsWith(T("perStepMiniBatch")))
            return VariableValue(InferenceOnlineLearner::perStepMiniBatch + str.substring(strlen("perStepMiniBatch")).getIntValue());
          else
            return Enumeration::createFromString(value, callback);
        }
        
        virtual String toString(const VariableValue&amp; value) const
        {
          juce::int64 val = value.getInteger();
          if (val >= InferenceOnlineLearner::perStepMiniBatch)
            return T("perStepMiniBatch") + String(val - InferenceOnlineLearner::perStepMiniBatch);
          else
            return Enumeration::toString(value);
        }
      </code>

    </enumeration>

    <class name="InferenceOnlineLearner" abstract="yes">
      <variable type="InferenceOnlineLearner" name="nextLearner"/>
    </class>

    <class name="UpdatableOnlineLearner" base="InferenceOnlineLearner" abstract="yes">
      <variable type="PositiveInteger" name="epoch"/>
      <variable type="LearnerUpdateFrequency" name="updateFrequency" enumeration="yes"/>
    </class>

    <class name="StoppingCriterionOnlineLearner" base="UpdatableOnlineLearner">
      <constructor arguments="InferenceOnlineLearner::UpdateFrequency criterionTestFrequency, StoppingCriterionPtr criterion, bool restoreBestParametersWhenLearningStops"/>

      <variable type="StoppingCriterion" name="criterion"/>
      <variable type="Boolean" name="restoreBestParametersWhenLearningStops"/>

      <variable type="Boolean" name="learningStopped"/>
      <variable type="Variable" name="bestParameters"/>
      <variable type="Double" name="bestScore"/>
    </class>

    <class name="RandomizerOnlineLearner" base="UpdatableOnlineLearner">
      <constructor arguments="InferenceOnlineLearner::UpdateFrequency randomizationFrequency"/>
    </class>

  </namespace>
</file>
