<?xml version="1.0" encoding="UTF-8"?>

<file name="InferenceContext" directory="Inference/InferenceContext">

  <namespace name="lbcpp">

    <class name="InferenceWorkUnit" base="WorkUnit">
      <constructor arguments="const String&amp; name, InferencePtr inference, const Variable&amp; input, const Variable&amp; supervision, Variable&amp; output"/>
      <variable type="Inference" name="inference"/>
      <variable type="Variable" name="input"/>
      <variable type="Variable" name="supervision"/>
    </class>
    
    <class name="InferenceStack">
      <variable type="ObjectVector[Inference]" name="stack"/>
    </class>

    <class name="InferenceContext" base="ExecutionContext" abstract="yes"/>

    <class name="SingleThreadedInferenceContext" base="InferenceContext">
      <constructor/>
      <variable type="InferenceStack" name="stack"/>
    </class>
<!--
    <class name="ThreadOwnedInferenceContext" base="InferenceContext">
      <constructor arguments="Thread* thread, ThreadPoolPtr pool, InferenceStackPtr stack"/>
      <variable type="ThreadPool" name="pool"/>
      <variable type="InferenceStack" name="stack"/>
    </class>
    
    <class name="MultiThreadedInferenceContext" base="InferenceContext">
      <constructor arguments="ThreadPoolPtr pool"/>
      <variable type="ThreadPool" name="pool"/>
    </class>
 -->
  </namespace>
  
</file>
