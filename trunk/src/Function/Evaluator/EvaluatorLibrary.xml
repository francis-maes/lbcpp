<?xml version="1.0" encoding="UTF-8"?>

<library name="Evaluator" directory="Function/Evaluator">
  <include file="lbcpp/Function/Evaluator.h"/>
  <include file="lbcpp/Function/OldEvaluator.h"/>

  <!-- ScoreObject Base Classes -->
  <class name="ScoreObject" base="Object" abstract="yes"/>
  <class name="DummyScoreObject" base="ScoreObject"/>
  <class name="CompositeScoreObject" base="ScoreObject">
    <variable type="ObjectVector[ScoreObject]" name="scores"/>
    <variable type="PositiveInteger" name="scoreToMinimizeIndex"/>
  </class>

  <!-- Evaluator Base Classes -->
  <class name="Evaluator" base="Function" abstract="yes"/>
  <class name="SupervisedEvaluator" base="Evaluator" abstract="yes"/>
  <class name="CompositeEvaluator" base="Evaluator"/>
  <class name="ProxyEvaluator" base="Evaluator" abstract="yes"/>

  <!-- Score Enumerations -->
  <enumeration name="BinaryClassificationScore">
    <value name="accuracyScore" oneLetterCode="a"/>
    <value name="f1Score" oneLetterCode="f"/>
    <value name="mccScore" oneLetterCode="m"/>
  </enumeration>

  <!-- Utility Classes -->
  <class name="BinaryClassificationConfusionMatrix" base="ScoreObject">
    <variable type="Double" name="precision"/>
    <variable type="Double" name="recall"/>
    <variable type="Double" name="f1score"/>
    <variable type="Double" name="matthewsCorrelation"/>
    <variable type="Double" name="accuracy"/>
    <variable type="PositiveInteger" name="truePositive"/>
    <variable type="PositiveInteger" name="falsePositive"/>
    <variable type="PositiveInteger" name="falseNegative"/>
    <variable type="PositiveInteger" name="trueNegative"/>
    <variable type="PositiveInteger" name="totalCount"/>
  </class>

  <class name="ROCScoreObject" base="ScoreObject">
    <variable type="BinaryClassificationScore" name="scoreToOptimize" enumeration="yes"/>
    <variable type="Double" name="bestThreshold"/>
    <variable type="Double" name="bestThresholdScore"/>
    <variable type="ObjectVector[Pair[Double, Double]]" name="precision"/>
    <variable type="ObjectVector[Pair[Double, Double]]" name="recall"/>
  </class>

  <!-- Regression -->
  <class name="RegressionScoreObject" base="ScoreObject">
    <variable type="Double" name="leastSquares"/>
    <variable type="Double" name="meanSquareError"/>
    <variable type="Double" name="rootMeanSquareError"/>
    <variable type="Double" name="absolute"/>
  </class>
  
  <class name="RegressionEvaluator" base="SupervisedEvaluator">
    <constructor/>
  </class>

  <!-- Binary Classification -->
  <class name="BinaryClassificationEvaluator" base="SupervisedEvaluator">
    <constructor/>
  </class>
  
  <class name="ROCAnalysisEvaluator" base="SupervisedEvaluator">
    <constructor arguments="BinaryClassificationScore scoreToOptimize"/>
    <variable type="BinaryClassificationScore" name="scoreToOptimize" enumeration="yes"/>
  </class>

  <!-- MultiClass Classification -->
  <class name="ClassificationScoreObject" base="ScoreObject">
    <variable type="Double" name="accuracy"/>
  </class>

  <class name="ClassificationEvaluator" base="SupervisedEvaluator">
    <constructor/>
  </class>
  
  <!-- MultiLabel Classification -->
  <class name="MultiLabelClassificationScoreObject" base="ScoreObject">
    <variable type="Double" name="hammingLoss"/>
    <variable type="Double" name="accuracy"/>
    <variable type="Double" name="precision"/>
    <variable type="Double" name="recall"/>
  </class>
  
  <class name="MultiLabelClassificationEvaluator" base="SupervisedEvaluator">
    <constructor/>
  </class>

  <!-- Default Evaluator -->
  <class name="DefaultSupervisedEvaluator" base="ProxyEvaluator">
    <constructor returnType="Evaluator"/>
  </class>
 
  <!-- Function -->
  <class name="ConcatenateScoreObjectFunction" base="Function">
    <constructor/>
  </class>

  <!-- Misc -->
  <class name="SaveToDirectoryEvaluator" base="Evaluator">
    <constructor arguments="const File&amp; directory, const String&amp; extension"/>
    <variable type="File" name="directory"/>
    <variable type="String" name="extension"/>
  </class>
  
  <class name="ContainerElementsEvaluator" base="Evaluator">
    <constructor arguments="EvaluatorPtr elementEvaluator"/>
    <variable type="Evaluator" name="elementEvaluator"/>
  </class>

  <!-- Old -->
  <class name="OldEvaluator" base="NameableObject" abstract="yes"/>
  
<!--
  <class name="OldRegressionErrorEvaluator" base="OldEvaluator">
    <constructor arguments="const String&amp; name"/>
  </class>

  <class name="OldDihedralRegressionErrorEvaluator" base="OldRegressionErrorEvaluator">
    <constructor arguments="const String&amp; name"/>
  </class>


  <class name="OldBinaryClassificationConfusionEvaluator" base="OldEvaluator">
    <constructor arguments="const String&amp; name"/>
  </class>
  
  <class name="OldROCAnalysisEvaluator" base="OldEvaluator">
    <constructor arguments="const String&amp; name"/>
  </class>


  <class name="OldClassificationAccuracyEvaluator" base="OldEvaluator">
    <constructor arguments="const String&amp; name"/>
    <variable type="ScalarVariableMean" name="accuracy"/>
  </class>


  <class name="OldMultiLabelClassificationEvaluator" base="OldEvaluator">
    <constructor arguments="const String&amp; name"/>
    <variable type="ScalarVariableMean" name="hammingLoss"/>
    <variable type="ScalarVariableMean" name="accuracy"/>
    <variable type="ScalarVariableMean" name="precision"/>
    <variable type="ScalarVariableMean" name="recall"/>
  </class>
  
-->
</library>
