<?xml version="1.0" encoding="UTF-8"?>

<library name="MiscFunctions" directory="Function/MiscFunctions">
  
  <!-- New -->
  <class name="GetVariableFunction" base="Function">
    <constructor arguments="const String&amp; variableName"/>
    <constructor arguments="size_t variableIndex"/>
    <variable type="PositiveInteger" name="variableIndex"/>
    <variable type="String" name="variableName"/>
  </class>

  <class name="GetElementFunction" base="Function">
    <constructor/>
  </class>

  <class name="CreateObjectFunction" base="Function">
    <constructor arguments="ClassPtr objectClass"/>
    <variable type="Class" name="objectClass"/>
  </class>
  
  <!-- Old -->
  <class name="IdentityFunction" base="Function">
    <constructor arguments="TypePtr type"/>
    <variable type="Type" name="type"/>
  </class>

  <class name="ComposeFunction" base="Function">
    <constructor arguments="const FunctionPtr&amp; f, const FunctionPtr&amp; g"/>
    <variable type="Function" name="f"/>
    <variable type="Function" name="g"/>
  </class>
  
  <class name="MultiplyDoubleFunction" base="Function">
    <constructor/>
  </class>
  
  <class name="LoadFromFileFunction" base="Function">
    <constructor arguments="TypePtr expectedType"/>
    <variable type="Type" name="expectedType"/>
  </class>
  
  <class name="LoadFromFilePairFunction" base="Function">
    <constructor arguments="TypePtr expectedType1, TypePtr expectedType2"/>
    <variable type="Type" name="expectedType"/>
  </class>

  <class name="SetFieldFunction" base="Function">
    <constructor arguments="size_t fieldIndex"/>
    <variable type="Integer" name="fieldIndex"/>
  </class>

  <class name="SelectVariableFunction" base="Function">
    <constructor arguments="int index"/>
    <variable type="Integer" name="index"/>
  </class>
  
  <class name="SelectPairVariablesFunction" base="Function">
    <constructor arguments="int index1, int index2, TypePtr inputPairClass"/> 
    <variable type="Integer" name="index1"/>
    <variable type="Integer" name="index2"/>
    <variable type="Type" name="inputPairClass"/>
  </class>
  
</library>
