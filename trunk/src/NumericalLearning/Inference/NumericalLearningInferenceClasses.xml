<?xml version="1.0" encoding="UTF-8"?>

<file name="NumericalLearningInference" directory="NumericalLearning/Inference">

  <namespace name="lbcpp">

    <!-- Atomic Inferences -->
    <template name="NumericalInferenceParameters">
      <parameter name="weightsType" type="Object"/>

      <variable type="Perception" name="perception"/>
      <variable type="weightsType" name="weights"/>
    </class>
    <class name="NumericalInference" base="ParameterizedInference" abstract="yes"/>

    <class name="LinearInference" base="NumericalInference">
      <constructor arguments="const String&amp; name, PerceptionPtr perception"/>
    </class>
    <class name="MultiLinearInference" base="NumericalInference">
      <constructor arguments="const String&amp; name, PerceptionPtr perception, ClassPtr outputClass"/>
      <variable type="Class" name="outputClass"/>
    </class>
    
    <!-- Binary Classification -->
    <class name="BinaryClassificationInference" base="StaticDecoratorInference" abstract="yes"/>

    <class name="BinaryLinearSVMInference" base="BinaryClassificationInference">
      <constructor arguments="PerceptionPtr perception, InferenceOnlineLearnerPtr learner, const String&amp; name" returnType="Inference"/>
      <constructor arguments="InferencePtr scoreInference" returnType="Inference"/>
    </class>
    
    <class name="BinaryLogisticRegressionInference" base="BinaryClassificationInference">
      <constructor arguments="PerceptionPtr perception, InferenceOnlineLearnerPtr learner, const String&amp; name" returnType="Inference"/>
    </class>

    <!-- Regression -->
    <class name="RegressionInference" base="StaticDecoratorInference" abstract="yes"/>

    <class name="SquareRegressionInference" base="RegressionInference">
      <constructor arguments="PerceptionPtr perception, InferenceOnlineLearnerPtr learner, const String&amp; name" returnType="Inference"/>
    </class>
    
    <class name="AbsoluteRegressionInference" base="RegressionInference">
      <constructor arguments="PerceptionPtr perception, InferenceOnlineLearnerPtr learner, const String&amp; name" returnType="Inference"/>
    </class>
    
    <class name="DihedralAngleRegressionInference" base="RegressionInference">
      <constructor arguments="PerceptionPtr perception, InferenceOnlineLearnerPtr learner, const String&amp; name" returnType="Inference"/>
    </class>

    <!-- MultiClass Classification -->
    <class name="MultiClassInference" base="StaticDecoratorInference" abstract="yes">
      <variable type="Enumeration" name="classes"/>
    </class>

    <class name="MultiClassLinearSVMInference" base="MultiClassInference">
      <constructor arguments="PerceptionPtr perception, EnumerationPtr classes, InferenceOnlineLearnerPtr learner, bool updateOnlyMostViolatedClasses, const String&amp; name" returnType="StaticDecoratorInference"/>
      <variable type="Boolean" name="updateOnlyMostViolatedClasses"/>
    </class>

    <class name="MultiClassMaxentInference" base="MultiClassInference">
      <constructor arguments="PerceptionPtr perception, EnumerationPtr classes, InferenceOnlineLearnerPtr learner, const String&amp; name" returnType="StaticDecoratorInference"/>
    </class>

    <!-- Misc -->
    <class name="TransferFunctionDecoratorInference" base="StaticDecoratorInference">
      <constructor arguments="const String&amp; name, InferencePtr decoratedInference, ScalarFunctionPtr transferFunction" returnType="Inference"/>
      <variable type="ScalarFunction" name="transferFunction"/>
    </class>

  </namespace>
</file>
