<?xml version="1.0" encoding="UTF-8"?>

<library name="NumericalLearningLossFunction" directory="NumericalLearning/LossFunction">
  <include file="lbcpp/NumericalLearning/LossFunctions.h"/>

  
  <!-- Ranking Loss Functions
  <class name="BinaryClassificationRankingLossFunction" base="AdditiveRankingLossFunction" abstract="yes"/>
  <class name="F1ScoreRankingLossFunction" base="BinaryClassificationRankingLossFunction">
    <constructor arguments="DiscriminativeLossFunctionPtr baseLoss, const std::vector&lt;double&gt;&amp; costs" returnType="RankingLossFunction"/>
  </class>
  <class name="MCCRankingLossFunction" base="BinaryClassificationRankingLossFunction">
    <constructor arguments="DiscriminativeLossFunctionPtr baseLoss, const std::vector&lt;double&gt;&amp; costs" returnType="RankingLossFunction"/>
  </class>
  -->

  <!-- Regularizers -->
  <class name="L2RegularizerFunction" base="ScalarVectorFunction">
    <constructor arguments="double weight"/>
    <variable type="Double" name="weight"/>
  </class>
   
</library>
