<?xml version="1.0" encoding="UTF-8"?>

<library name="OptimizerOptimizer" directory="Optimizer/Optimizer">

  <import name="OptimizerOptimizerGrid" ifdef="LBCPP_NETWORKING"/>

  <include file="lbcpp/Optimizer/Optimizer.h"/>

  <class name="UniformSampleAndPickBestOptimizer" base="Optimizer">
    <constructor arguments="size_t numSamples, bool verbose"/>
    <variable type="PositiveInteger" name="numSamples"/>
    <variable type="Boolean" name="verbose"/>
  </class>
  
  <class name="EDAOptimizer" base="Optimizer" shortName="eda">
    <constructor arguments="size_t numIterations, size_t populationSize, size_t numBests, bool reinjectBest, bool verbose"/>
    <variable type="PositiveInteger" name="numIterations"/>
    <variable type="PositiveInteger" name="populationSize"/>
    <variable type="PositiveInteger" name="numBests"/>
    <variable type="Boolean" name="reinjectBest"/>
    <variable type="Boolean" name="verbose"/>
    <variable type="RandomGenerator" name="random"/>
  </class>
  
  <class name="AsyncEDAOptimizer" base="Optimizer">
    <constructor arguments="size_t totalNumberEvaluationsRequested, size_t numberEvaluationsToUpdate, size_t ratioUsedForUpdate, size_t timeToSleep, size_t updateFactor, size_t numberEvaluationsInProgress, bool verbose"/>
    <variable type="PositiveInteger" name="totalNumberEvaluationsRequested"/>
    <variable type="PositiveInteger" name="numberEvaluationsToUpdate"/>
    <variable type="PositiveInteger" name="ratioUsedForUpdate"/>
    <variable type="PositiveInteger" name="timeToSleep"/>
    <variable type="PositiveInteger" name="updateFactor"/>
    <variable type="PositiveInteger" name="numberEvaluationsInProgress"/>
    <variable type="Boolean" name="verbose"/>
  </class>
     
  <!--
  <class name="IterativeBracketingOptimizer" base="Optimizer">
    <constructor arguments="size_t numPasses, double reductionFactor, const OptimizerOldPtr&amp; baseOptimizer"/>
    <variable type="PositiveInteger" name="numPasses"/>
    <variable type="Double" name="reductionFactor"/>
    <variable type="Optimizer" name="baseOptimizer"/>
  </class> 
  -->
  
</library>
