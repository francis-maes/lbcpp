<?xml version="1.0" encoding="UTF-8"?>

<library name="OptimizerOptimizer" directory="Optimizer/Optimizer">

  <include file="lbcpp/Optimizer/Optimizer.h"/>
  <include file="lbcpp/Optimizer/GridOptimizer.h"/>

  <class name="UniformSampleAndPickBestOptimizer" base="Optimizer">
    <constructor arguments="size_t numSamples"/>
    <variable type="PositiveInteger" name="numSamples"/>
  </class>

  <class name="IterativeBracketingOptimizer" base="Optimizer">
    <constructor arguments="size_t numPasses, double reductionFactor, const OptimizerPtr&amp; baseOptimizer"/>
    <variable type="PositiveInteger" name="numPasses"/>
    <variable type="Double" name="reductionFactor"/>
    <variable type="Optimizer" name="baseOptimizer"/>
  </class>
  
  <class name="GridEvoOptimizer" base="GridOptimizer"/>
  <class name="GridEvoOptimizerState" base="GridOptimizerState" abstract="yes">
    <variable type="PositiveInteger" name="totalNumberGeneratedWUs"/>
    <variable type="PositiveInteger" name="totalNumberEvaluatedWUs"/>
    <variable type="GenericVector[String]" name="inProgressWUs"/>
    <variable type="GenericVector[String]" name="currentEvaluatedWUs"/>
    <variable type="IndependentMultiVariateDistribution[Variable]" name="distributions"/>
  </class>

</library>
