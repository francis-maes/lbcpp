<?xml version="1.0" encoding="UTF-8"?>

<library name="OptimizerOptimizer" directory="Optimizer/Optimizer">

  <import name="OptimizerOptimizerGrid" ifdef="LBCPP_NETWORKING"/>

  <include file="lbcpp/Optimizer/Optimizer.h"/>

  <!-- <class name="UniformSampleAndPickBestOptimizer" base="OptimizerOld">
    <constructor arguments="size_t numSamples"/>
    <variable type="PositiveInteger" name="numSamples"/>
  </class>

  <class name="IterativeBracketingOptimizer" base="OptimizerOld">
    <constructor arguments="size_t numPasses, double reductionFactor, const OptimizerOldPtr&amp; baseOptimizer"/>
    <variable type="PositiveInteger" name="numPasses"/>
    <variable type="Double" name="reductionFactor"/>
    <variable type="Optimizer" name="baseOptimizer"/>
  </class> -->
  
</library>
