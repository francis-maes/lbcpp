<?xml version="1.0" encoding="UTF-8"?>

<library name="Optimizer" directory="Optimizer">

  <include file="lbcpp/Optimizer/Optimizer.h"/>
  <include file="lbcpp/Optimizer/BanditPool.h"/>
  <import name="OptimizerOptimizer"/>

  <!-- Optimizer -->
  <class name="OptimizationProblem" base="Object">
    <variable type="Function" name="objective"/>
    <variable type="Variable" name="initialGuess"/>
    <variable type="Sampler" name="sampler"/>
    <variable type="Function" name="validation"/>
  </class>

  <class name="Optimizer" base="Function" abstract="yes">
    <variable type="File" name="optimizerStateFile"/>
  </class>

  <!-- OptimizerState -->
  <class name="OptimizerState" base="Object">
    <variable type="OptimizationProblem" name="problem"/>
    <variable type="Variable" name="bestSolution"/>
    <variable type="Double" name="bestScore"/>
  </class>

  <!-- Bandit Pool -->
  <class name="BanditPoolObjective" abstract="yes"/>
  <class name="BanditPool">
    <variable type="BanditPoolObjective" name="objective"/>
    <variable type="Double" name="explorationCoefficient"/>
    <variable type="Boolean" name="optimizeMax"/>
    <variable type="Boolean" name="useMultiThreading"/>
  </class>

</library>
