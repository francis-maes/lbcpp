<?xml version="1.0" encoding="UTF-8"?>

<library name="Sampler" directory="Sampler">

  <class name="Sampler" abstract="yes"/>
  <class name="DecoratorSampler" base="Sampler" abstract="yes">
    <variable type="Sampler" name="sampler"/>
  </class>

  <!-- Generic Samplers -->
  <class name="BinaryMixtureSampler" base="Sampler">
    <constructor arguments="SamplerPtr sampler1, SamplerPtr sampler2, double probability"/>
    <variable type="Sampler" name="sampler1"/>
    <variable type="Sampler" name="sampler2"/>
    <variable type="NewProbability" name="probability"/>
  </class>

  <!-- Continuous Samplers -->
  <class name="UniformContinuousSampler" base="Sampler">
    <constructor/>
  </class>
  
  <class name="DiagonalGaussianSampler" base="Sampler">
    <constructor/>
    <variable type="NewDouble" name="learningRate"/>
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,NewDouble]" name="mean"/>
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,NewDouble]" name="stddev"/>
  </class>
  <class name="DiagonalGaussianDistributionSampler" base="DiagonalGaussianSampler">
    <constructor returnType="Sampler"/>
  </class>

  <!-- Search Samplers -->
  <class name="SearchSampler" base="Sampler" abstract="yes"/>
  
  <class name="RandomSearchSampler" base="SearchSampler">
    <constructor/>
  </class>
  
  <class name="LogLinearActionCodeSearchSampler" base="SearchSampler">
    <constructor arguments="SearchActionCodeGeneratorPtr codeGenerator, double regularizer, double learningRate"/>
    <variable type="SearchActionCodeGenerator" name="codeGenerator"/>
    <variable type="NewDouble" name="regularizer"/>
    <variable type="NewDouble" name="learningRate"/>
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,NewDouble]" name="parameters"/>
  </class>

</library>
