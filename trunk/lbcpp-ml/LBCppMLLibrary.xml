<?xml version="1.0" encoding="UTF-8"?>

<library name="LBCppML">

  <import name="Comparator"/>
  <import name="Sampler"/>
  <import name="Optimizer"/>
  <import name="Function"/>
  <import name="Expression"/>
  
  <include file="lbcpp-ml/Problem.h"/>
  <include file="lbcpp-ml/Search.h"/>

  <!-- CORE -->
  <class name="Domain" abstract="yes"/>
  <class name="DiscreteDomain" base="Domain">
    <variable type="ObjectVector[Object]" name="elements"/>
  </class>
  <class name="ContinuousDomain" base="Domain">
    <variable type="ObjectVector[Pair[Double,Double]]" name="limits"/>
  </class>

  <class name="FitnessLimits" base="ContinuousDomain"/>

  <class name="Fitness">
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,Double]" name="values"/>
    <variable type="FitnessLimits" name="limits"/>
  </class>

  <class name="Solution">
    <variable type="Object" name="object"/>
    <variable type="Fitness" name="fitness"/>
  </class>

  <class name="SolutionSet">
    <variable type="FitnessLimits" name="limits"/>
    <variable type="ObjectVector[Solution]" name="solutions"/>
  </class>
  <class name="ParetoFront" base="SolutionSet"/>

  <uicomponent name="SolutionSetComponent" type="SolutionSet"/>

  <!-- Search -->
  <class name="SearchState" base="Object" abstract="yes"/>
  <class name="SearchTrajectory" base="Object">
    <variable type="ObjectVector[Object]" name="actions"/>
    <variable type="SearchState" name="finalState"/>
  </class>
  <class name="SearchDomain" base="Domain" abstract="yes"/>

  <!-- Problems -->
  <class name="Problem" abstract="yes"/>
  
  <class name="DecoratorProblem" base="Problem" abstract="yes">
    <variable type="Problem" name="problem"/>
  </class>
  <class name="MaxIterationsDecoratorProblem" base="DecoratorProblem">
    <variable type="PositiveInteger" name="maxNumEvaluations"/>
  </class>
  <class name="EvaluatorDecoratorProblem" base="MaxIterationsDecoratorProblem" abstract="yes">
    <variable type="PositiveInteger" name="evaluationPeriod"/>
  </class>
  <class name="SingleObjectiveEvaluatorDecoratorProblem" base="EvaluatorDecoratorProblem"/>
  <class name="HyperVolumeEvaluatorDecoratorProblem" base="EvaluatorDecoratorProblem"/>

</library>
