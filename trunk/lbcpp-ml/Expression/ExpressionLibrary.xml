<?xml version="1.0" encoding="UTF-8"?>

<library name="Expression" directory="Expression">

  <include file="lbcpp-ml/Expression.h"/>
  <include file="lbcpp-ml/ExpressionDomain.h"/>
  <include file="lbcpp-ml/ExpressionUniverse.h"/>
    
  <!-- Expressions-->
  <class name="Expression" base="Object" abstract="yes">
    <variable type="Type" name="type"/>
    <!-- <variable type="PositiveInteger" name="allocationIndex"/> -->
  </class>
  <class name="VariableExpression" base="Expression">
    <variable type="String" name="name"/>
    <variable type="PositiveInteger" name="inputIndex"/>
  </class>
  <class name="ConstantExpression" base="Expression">
    <variable type="Variable" name="value"/>
  </class>
  <class name="FunctionExpression" base="Expression">
    <variable type="Function" name="function"/>
    <variable type="ObjectVector[Expression]" name="arguments"/>
  </class>
  <class name="SequenceExpression" base="Expression" abstract="yes">
    <variable type="ObjectVector[Expression]" name="nodes"/>
  </class>
  <class name="ScalarSumExpression" base="SequenceExpression">
    <variable type="Boolean" name="convertToProbabilities"/>
    <variable type="Boolean" name="computeAverage"/>
  </class>
  <class name="VectorSumExpression" base="SequenceExpression">
    <variable type="Boolean" name="convertToProbabilities"/>
  </class>
  <class name="CreateSparseVectorExpression" base="SequenceExpression"/>
  <class name="TestExpression" base="Expression">
    <variable type="Expression" name="conditionNode"/>
    <variable type="Expression" name="failureNode"/>
    <variable type="Expression" name="successNode"/>
    <variable type="Expression" name="missingNode"/>
  </class>

  <!-- Universe -->
  <class name="ExpressionUniverse" base="Object"/>

  <class name="ExpressionDomain" base="Domain"/>


  <!-- Expression RPN -->
  <class name="ExpressionRPNSequence" base="Object">
    <variable type="ObjectVector[Object]" name="sequence"/>
  </class>
  
  <class name="ExpressionRPNTypeState">
    <variable type="PositiveInteger" name="depth"/>
    <variable type="ObjectVector[Type]" name="stack"/>
  </class>
  <class name="ExpressionRPNTypeSpace"/>

  <!-- Expression RPN Search State -->
  <class name="ExpressionRPNSearchState" base="SearchState">
    <variable type="ExpressionDomain" name="domain"/>
    <variable type="ExpressionRPNTypeSpace" name="typeSearchSpace"/>
    <variable type="ExpressionRPNTypeState" name="typeState"/>
    <variable type="DiscreteDomain" name="availableActions"/>
    <variable type="ObjectVector[Expression]" name="stack"/>
    <variable type="PositiveInteger" name="numSteps"/>
    <variable type="Boolean" name="isYielded"/>
  </class>
  
</library>
