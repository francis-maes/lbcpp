<?xml version="1.0" encoding="UTF-8"?>

<library name="Luape" directory="Luape">

  <import name="ExpressionBuilder"/>
  <import name="LuapeLearner"/>
  
  <include file="lbcpp-ml/Function.h"/>
  <include file="lbcpp-ml/Expression.h"/>
  <include file="lbcpp/Luape/LuapeInference.h"/>
  <include file="lbcpp/Luape/LuapeLearner.h"/>
  <include file="lbcpp/Luape/ExpressionBuilder.h"/>

  <!-- Inference -->
  <class name="LuapeBinaryClassifier" base="ExpressionDomain">
    <constructor/>
  </class>
  <class name="LuapeClassifier" base="ExpressionDomain">
    <constructor/>
  </class>
  <class name="LuapeRanker" base="ExpressionDomain">
    <constructor/>
  </class>
  <class name="LuapeRegressor" base="ExpressionDomain">
    <constructor/>
  </class>

  <!-- Node Builders -->
  <class name="ExpressionRPNSequence" base="Object">
    <variable type="ObjectVector[Object]" name="sequence"/>
  </class>
  
  <class name="ExpressionBuilder" base="Object" abstract="yes"/>
  <class name="StochasticNodeBuilder" base="ExpressionBuilder" abstract="yes">
    <variable type="PositiveInteger" name="numNodes"/>
  </class>
  <class name="SequentialNodeBuilder" base="StochasticNodeBuilder" abstract="yes">
    <variable type="PositiveInteger" name="complexity"/>
  </class>

  <!-- Learning objectives -->
  <class name="LearningObjective" base="Object" abstract="yes"/>
  <class name="SupervisedLearningObjective" base="LearningObjective" abstract="yes"/>
  <class name="RegressionLearningObjective" base="SupervisedLearningObjective"/>
  <class name="BinaryClassificationLearningObjective" base="SupervisedLearningObjective"/>
  <class name="ClassificationLearningObjective" base="SupervisedLearningObjective" abstract="yes"/>
  <class name="InformationGainBinaryLearningObjective" base="BinaryClassificationLearningObjective">
    <variable type="Boolean" name="normalize"/>
  </class>
  <class name="InformationGainLearningObjective" base="ClassificationLearningObjective">
    <variable type="Boolean" name="normalize"/>
  </class>

  <!-- Learners -->
  <class name="LuapeLearner" abstract="yes">
    <variable type="Boolean" name="verbose"/>
  </class>
  <class name="NodeBuilderBasedLearner" base="LuapeLearner" abstract="yes">
    <variable type="ExpressionBuilder" name="nodeBuilder"/>
  </class>
  <class name="IterativeLearner" base="LuapeLearner" abstract="yes">
    <variable type="PositiveInteger" name="maxIterations"/>
  </class>
  <class name="DecoratorLearner" base="LuapeLearner" abstract="yes">
    <variable type="LuapeLearner" name="decorated"/>
  </class>
  
</library>
