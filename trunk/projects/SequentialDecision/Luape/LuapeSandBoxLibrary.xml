<?xml version="1.0" encoding="UTF-8"?>

<library name="LuapeSandBox" directory="Luape">
  
  <!-- Weak Learners -->
  <class name="DPOptimizerBasedWeakLearner" base="BoostingWeakLearner">
    <variable type="Optimizer" name="optimizer"/>
    <variable type="PositiveInteger" name="maxDepth"/>
    <variable type="LuapeGraphBuilderTypeSearchSpace" name="typeSearchSpace"/>
  </class>
  <class name="NestedMCWeakLearner" base="DPOptimizerBasedWeakLearner">
    <constructor arguments="size_t level, size_t iterations, size_t maxDepth" returnType="BoostingWeakLearner"/>
  </class>

  <!--
  <class name="BanditPoolWeakLearner" base="BoostingWeakLearner">
    <constructor arguments="size_t maxBandits, size_t maxDepth"/>
    <variable type="PositiveInteger" name="maxBandits"/>
    <variable type="PositiveInteger" name="maxDepth"/>
  </class>
  -->
  <class name="GradientDescentLearner" base="IterativeLearner" abstract="yes">
    <variable type="IterationFunction" name="learningRate"/>
  </class>
  <class name="ClassifierSGDLearner" base="GradientDescentLearner">
    <variable type="MultiClassLossFunction" name="lossFunction"/>
  </class>
  <class name="GenerateTestNodesLearner" base="LuapeLearner">
    <variable type="BoostingWeakLearner" name="conditionGenerator"/>
  </class>

  <!-- Sand Box -->
  <class name="LuapeSandBox" base="WorkUnit">
    <variable type="File" name="trainFile"/>
    <variable type="File" name="testFile"/>
    <variable type="PositiveInteger" name="maxExamples"/>
    <variable type="PositiveInteger" name="treeDepth"/>
    <variable type="PositiveInteger" name="complexity"/>
    <variable type="Double" name="relativeBudget"/>
    <variable type="PositiveInteger" name="numIterations"/>
    <variable type="PositiveInteger" name="minExamplesForLaminating"/>
    <variable type="Boolean" name="useVariableRelevancies"/>
    <variable type="Boolean" name="useExtendedVariables"/>
    <variable type="Boolean" name="verbose"/>
    <variable type="File" name="plotFile"/>
  </class>
</library>
