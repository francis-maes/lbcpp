<?xml version="1.0" encoding="UTF-8"?>

<library name="SequentialDecisionGo" directory="Go">

  <!-- Go Game -->
  <enumeration name="Player">
    <value name="noPlayers" shortName="no" oneLetterCode="-"/>
    <value name="blackPlayer" shortName="black" oneLetterCode="b"/>
    <value name="whitePlayer" shortName="white" oneLetterCode="w"/>
  </enumeration>

  <class name="GoBoard" base="ShortEnumerationMatrix[Player]"/>
  <class name="GoState" base="DecisionProblemState">
    <variable type="PositiveInteger" name="time"/>
    <variable type="GoBoard" name="board"/>
    <variable type="PositiveInteger" name="whitePrisonerCount"/>
    <variable type="PositiveInteger" name="blackPrisonerCount"/>
    <variable type="PositiveIntegerPairVector" name="previousActions"/>
  </class>

  <class name="GoStateSampler" base="Function">
    <variable type="PositiveInteger" name="minSize"/>
    <variable type="PositiveInteger" name="maxSize"/>
  </class>
  <class name="GoProblem" base="DecisionProblem"/>

  <uicomponent name="GoStateComponent" type="GoState"/>
  <uicomponent name="GoStateAndScoresComponent" type="Pair[GoState,DoubleMatrix[Double]]"/>
  <uicomponent name="GoBoardComponent" type="GoBoard"/>

  <!-- Smart Game Format parser -->
  <class name="SGFFileParser" base="TextParser"/>
  <class name="ConvertSGFXmlToStateAndTrajectory" base="Function"/>
  <class name="LoadSGFFileFunction" base="Function"/>
  <class name="LoadCompositeSGFFileFunction" base="Function"/>
         
  <!-- Go Decision Maker -->
  <class name="SupervisedLinearRankingBasedDecisionMaker" base="CompositeFunction">
    <variable type="Function" name="actionsPerceptionFunction"/>
    <variable type="Enumeration" name="actionFeaturesEnumeration" generated="yes"/>
    <variable type="StochasticGDParameters" name="sgdParameters"/>
    <variable type="Function" name="rankingMachine"/>
  </class>
  
  <class name="DecisionProblemSupervisedEpisode" base="Function">
    <variable type="Function" name="supervisedDecisionMaker"/>
  </class>

  <!-- Go Evaluator -->
  <class name="GoActionScoringScoreObject" base="ScoreObject">
    <variable type="ScalarVariableMean" name="predictionRate"/>
    <variable type="ScalarVariableStatistics" name="rankOfAction"/>
    <variable type="ScalarVariableMean" name="unsupervisedRate"/>
  </class>
  <class name="GoActionScoringEvaluator" base="SupervisedEvaluator"/>

  <class name="GoSupervisedEpisodeEvaluator" base="CallbackBasedEvaluator"/>

  <!-- Go Sand Box -->
  <class name="GoSandBox" base="WorkUnit">
    <variable type="File" name="trainingFile" shortName="train"/>
    <variable type="File" name="testingFile" shortName="test"/>
    <variable type="File" name="interactiveFile"/>
    <variable type="PositiveInteger" name="maxCount" shortName="m"/>
    <variable type="PositiveInteger" name="numFolds" shortName="n"/>
    <variable type="LearnerParameters" name="learningParameters" shortName="p"/>
    <variable type="File" name="outputFile" shortName="o"/>
    <variable type="Boolean" name="testFeatures"/>
  </class>
  <class name="GoPredict" base="WorkUnit">
    <variable type="File" name="modelFile"/>
    <variable type="File" name="sgfFile"/>
    <variable type="PositiveInteger" name="maxTurns"/>
  </class>
  <class name="GoSGFToGTP" base="WorkUnit">
    <variable type="String" name="executable"/>
    <variable type="String" name="parameters"/>
    <variable type="File" name="sgfFile"/>
  </class>
  <class name="SGFToStateSamples" base="WorkUnit">
    <variable type="File" name="input" shortName="i"/>
    <variable type="PositiveInteger" name="maxCount" shortName="m"/>
    <variable type="File" name="outputDirectory" shortName="o"/>
  </class>
  <class name="GoBoostingSandBox" base="WorkUnit">
    <variable type="File" name="examplesDirectory"/>
    <variable type="PositiveInteger" name="maxCount"/>
  </class>

    <!-- Go Features -->
  <template name="GoStatePreFeatures">
    <parameter name="globalFeaturesEnumeration" type="EnumValue"/>
    <parameter name="regionFeaturesEnumeration" type="EnumValue"/>
    <parameter name="actionFeaturesEnumeration" type="EnumValue"/>

    <variable type="GoState" name="state"/>
    <variable type="PositiveIntegerPairVector" name="previousActions"/>
    <variable type="GoBoard" name="board"/>
    <variable type="DoubleVector[globalFeaturesEnumeration,Double]" name="globalPrimaryFeatures"/>
    <variable type="SegmentedMatrix[Player]" name="fourConnexityGraph"/>
    <variable type="ObjectVector[DoubleVector[regionFeaturesEnumeration,Double]]" name="fourConnexityGraphFeatures"/>
    <!-- <variable type="SegmentedMatrix[Player]" name="eightConnexityGraph"/>
    <variable type="ObjectVector[DoubleVector[regionFeaturesEnumeration,Double]]" name="eightConnexityGraphFeatures"/>
    -->
    <variable type="ObjectMatrix[DoubleVector[actionFeaturesEnumeration,Double]]" name="actionPrimaryFeatures"/>
  </template>

  <class name="GoActionsPerception" base="CompositeFunction">
    <variable type="PositiveInteger" name="boardSize"/>
  </class>

  <enumeration name="DiscretizedGoCount">
    <value name="0"/>
    <value name="1"/>
    <value name="2"/>
    <value name="3"/>
    <value name="4"/>
    <value name="5-6"/>
    <value name="7-9"/>
    <value name="10-15"/>
    <value name="15-20"/>
    <value name="20-"/>
  </enumeration>
  
  <!-- Boosting -->
  <class name="BoostingWeakModel" base="Function" abstract="yes"/>
  <class name="IsFeatureActiveWeakModel" base="BoostingWeakModel">
    <constructor arguments="EnumerationPtr features, size_t index"/>
    <variable type="Enumeration" name="features"/>
    <variable type="PositiveInteger" name="index"/>
  </class>
  <class name="IsFeatureGreaterThanWeakModel" base="BoostingWeakModel">
    <constructor arguments="EnumerationPtr features, size_t index"/>
    <variable type="Enumeration" name="features"/>
    <variable type="PositiveInteger" name="index"/>
  </class>

  <class name="BoostingStrongModel" base="Function" abstract="yes">
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,Double]" name="weights"/>
    <variable type="ObjectVector[BoostingWeakModel]" name="weakModels"/>
    <variable type="Vector[Variable]" name="votes"/>
  </class>

  <class name="ScalarBoostingStrongModel" base="BoostingStrongModel">
    <constructor/>
  </class>
  <class name="RankingBoostingStrongModel" base="BoostingStrongModel">
    <constructor/>
  </class>

  <class name="BoostingLearner" base="BatchLearner" abstract="yes">
    <variable type="PositiveInteger" name="maxIterations"/>
  </class>

  <class name="RankBoostLearner" base="BoostingLearner">
    <constructor arguments="size_t maxIterations"/>
  </class>

  <!-- Go Perception -->
  <enumeration name="GoBoardPositionState">
    <value name="empty" oneLetterCode=" "/>
    <value name="myStone" oneLetterCode="b"/>
    <value name="opponentStone" oneLetterCode="w"/>
    <value name="outside" oneLetterCode="X"/>
  </enumeration>

  <class name="GoBoardPositionPerception">
<!--    <variable type="GoBoardPerception" name="board"/>
    <variable type="GoBoardPositionState" name="positionState" enumeration="yes"/>
    <variable type="GoBoardPositionPerception" name="previous"/>
    <variable type="Boolean" name="capturedAtPreviousTurn"/> -->
    <variable type="Boolean" name="bTrue"/>
    <variable type="Boolean" name="bFalse"/>
    <variable type="GoBoardPositionState" name="c11" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c12" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c13" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c21" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c22" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c23" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c31" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c32" enumeration="yes"/>
    <variable type="GoBoardPositionState" name="c33" enumeration="yes"/>
  </class>
  
  <class name="GoBoardPerception">
    <variable type="GoStatePerception" name="state"/>
    <variable type="PositiveInteger" name="boardSize"/>
    <variable type="Container[GoBoardPositionPerception]" name="positions"/>
    <variable type="GoBoardPositionPerception" name="passPosition"/>
  </class>
  <class name="GoStatePerception">
    <variable type="Boolean" name="isCurrentPlayerBlack"/>
    <variable type="PositiveInteger" name="time"/>
    <variable type="PositiveInteger" name="myPrisonerCount"/>
    <variable type="PositiveInteger" name="opponentPrisonerCount"/>
    <variable type="GoBoardPerception" name="board"/>
    <variable type="GoBoardPositionPerception" name="lastAction"/>
  </class>

  <class name="GoBoostingSandBox2" base="WorkUnit">
    <variable type="File" name="trainingFile" shortName="train"/>
    <variable type="File" name="testingFile" shortName="test"/>
    <variable type="PositiveInteger" name="maxCount"/>
    <variable type="PositiveInteger" name="maxDepth"/>
    <variable type="PositiveInteger" name="budget"/>
    <variable type="PositiveInteger" name="numIterations"/>
  </class>

</library>
