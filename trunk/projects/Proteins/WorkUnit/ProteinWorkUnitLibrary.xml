<?xml version="1.0" encoding="UTF-8"?>

<library name="ProteinWorkUnit" directory="WorkUnit">

  <class name="ProteinInferenceEvaluatorWorkUnit" base="WorkUnit">
    <variable type="File" name="inputDirectory" description="Input protein directory" shortName="in"/>
    <variable type="File" name="outputDirectory" description="Output protein directory" shortName="o"/>
    <variable type="File" name="inferenceFile" description="File of the inference to use" shortName="inf"/>
    <variable type="PositiveInteger" name="numThreads" description="The number of thread" shortName="t"/>
  </class>

  <class name="CaspPDBtoValidPDBWorkUnit" base="WorkUnit">
    <variable type="File" name="pdbDirectory" description="Input CASP PDB directory" shortName="in"/>
    <variable type="File" name="fastaFile" description="Input FASTA file (comments line must be the CASP PDB file name and the sequence must exactly be the same sequence that the tertiary structure of the CASP PDB file)" shortName="f"/>
    <variable type="File" name="outputDirectory" description="Output directory" shortName="o"/>
  </class>

  <class name="CompileProteinsWorkUnit" base="WorkUnit">
    <variable type="File" name="inputProteinFile" description="Input protein file" shortName="in"/>
    <variable type="File" name="pssmFile" description="PSSM file" shortName="pssm"/>
    <variable type="File" name="dsspFile" description="DSSP file" shortName="dssp"/>
    <variable type="File" name="outputProteinFile" description="Output file" shortName="o"/>
  </class>

  <class name="ConvertPDBToProteinWorkUnit" base="WorkUnit">
    <variable type="File" name="inputFile" description="The PDB (resp. Protein) input file" shortName="in"/>
    <variable type="File" name="outputFile" description="The Protein (resp. PDB) output file" shortName="o"/>
  </class>

  <!-- ProteinLearner -->
  <class name="ProteinLearner" base="WorkUnit">
    <variable type="File" name="supervisionDirectory" shortName="s"/>
    <variable type="File" name="inputDirectory" shortName="i"/>
    <variable type="PositiveInteger" name="maxProteins" shortName="m" description="The maximum number of proteins to load per dataset; 0 if not maximum"/>
    <variable type="ProteinPredictorParameters" name="parameters" shortName="p" description="Protein predictor parameters"/>
    <variable type="GenericVector[VariablesEnumeration[Protein]]" name="proteinTargets" shortName="t" description="The protein targets to be learned, to choose among: ss3,ss8,stal,sa20,dr"/>
    <variable type="PositiveInteger" name="numStacks" shortName="n" description="The number of re-estimation stacks"/>
    <variable type="Boolean" name="sequentialLearning" shortName="sl" description="Use a sequential approche"/>
    <variable type="File" name="predictionDirectory" shortName="o" description="The directory where to save predictions (optional)"/>
    <variable type="File" name="learnedModelFile" shortName="l" description="The file where to save learned model (optional)"/>
  </class>
  
  <class name="ProteinLearnerObjectiveFunction" base="SimpleUnaryFunction"/>
         
  <!-- BricoBox -->
  <class name="CheckDisulfideBondsWorkUnit" base="WorkUnit">
    <variable type="File" name="proteinDirectory"/>
  </class>
  
  <class name="CheckARFFDataFileParserWorkUnit" base="WorkUnit">
    <variable type="File" name="dataFile"/>
  </class>
  
  <class name="SaveObjectProgram" base="WorkUnit">
    <variable type="String" name="className" desc="The name of the object class to save" shortName="c"/>
    <variable type="File" name="outputFile" desc="The output file" shortName="o"/>
  </class>

  <class name="CheckXmlElementWorkUnit" base="WorkUnit">
    <variable type="XmlElement" name="aaa"/>
  </class>

  <class name="Save1DProteinTargets" base="WorkUnit">
    <variable type="File" name="inputProtein" shortName="in"/>
    <variable type="File" name="outputProtein" shortName="out"/>
  </class>
  
  <class name="LoadModelAndEvaluate" base="WorkUnit">
    <variable type="File" name="modelFile" shortName="m"/>
    <variable type="File" name="proteinDirectory" shortName="i"/>
  </class>
  
  <class name="DebugExecutionTraceLoading" base="WorkUnit">
    <variable type="File" name="traceFile" shortName="i"/>
  </class>
    
  <class name="ConvertFabienFileToProtein" base="WorkUnit">
    <variable type="File" name="inputDirectory" shortName="i"/>
    <variable type="File" name="outputDirectory" shortName="o"/>
  </class>
  
  <class name="ConvertSPXFileToProteins" base="WorkUnit">
    <variable type="File" name="spxFile"/>
    <variable type="File" name="outputDirectory"/>
  </class>

  <class name="GenerateFoldsWorkUnit" base="WorkUnit">
    <variable type="File" name="sourceDirectory" shortName="i"/>
    <variable type="File" name="destinationDirectory" shortName="o"/>
    <variable type="PositiveInteger" name="numFolds" shortName="n"/>
  </class>

  <class name="ProteinMaxLength" base="WorkUnit">
    <variable type="File" name="inputDirectory" shortName="i"/>
  </class>
  
  <class name="CheckGreedyDisulfideBondWorkUnit" base="WorkUnit">
    <variable type="File" name="inputFile"/>
  </class>

  <class name="ProteinStatisticsWorkUnit" base="WorkUnit">
    <variable type="File" name="inputDirectory" shortName="i"/>
  </class>

  <class name="BFSTestParameter" base="Object">
    <variable type="Double" name="a"/>
    <variable type="Double" name="b"/>
    <variable type="Double" name="c"/>
  </class>
  <class name="BFSTestObjectiveFunction" base="SimpleUnaryFunction"/>
  <class name="BFSTestWorkUnit" base="WorkUnit"/>

  <class name="LSHTestWorkUnit" base="WorkUnit"/>

  <class name="PrintFeaturesFunction" base="Function"/>
  <class name="NormalizeExampleCompositeFunction" base="CompositeFunction">
    <variable type="Function" name="decorated"/>
  </class>

  <!-- BEGIN CysteinBox -->
  <class name="StreamBasedOptimizationProblem" base="OptimizationProblem">
    <variable type="Stream" name="stream"/>
  </class>
  <class name="SimpleStreamBasedOptimizerState" base="OptimizerState">
    <variable type="GenericVector[Double]" name="results"/>
  </class>
  <class name="StreamBasedOptimizer" base="Optimizer"/>

  <class name="TestStreamBasedOptimizerFunction" base="Function"/>
  <class name="TestStreamBasedOptimizer" base="WorkUnit"/>

  <class name="DisulfideBondLearner" base="Function">
    <variable type="Container[Variable]" name="trainingProteins"/>
    <variable type="Container[Variable]" name="testingProteins"/>
    <variable type="LargeProteinPredictorParameters" name="predictor"/>
  </class>
  <class name="DisulfideBondByGreedyLeaveOneOut" base="WorkUnit">
    <variable type="File" name="inputDirectory" shortName="in"/>
    <variable type="File" name="supervisionDirectory" shortName="sup"/>
    <variable type="File" name="optimizerStateFile" shortName="opt"/>
  </class>

  <class name="DisulfideBondTestWorkUnit" base="WorkUnit">
    <variable type="File" name="inputDirectory" shortName="in"/>
    <variable type="File" name="supervisionDirectory" shortName="sup"/>
  </class>

  <class name="GaussianSVMOptimizerState" base="OptimizerState">
    <variable type="GenericVector[Double]" name="results"/>
  </class>
  <class name="GaussianSVMOptimizer" base="Optimizer"/>
  <class name="CrossValidationFunction" base="Function">
    <variable type="Function" name="objectiveFunction"/>
    <variable type="PositiveInteger" name="numFolds"/>
    <variable type="ExecutionContext" name="foldContext"/>
  </class>
  <class name="DisulfideBondGaussianSVM" base="Function">
    <variable type="String" name="inputDirectory"/>
    <variable type="String" name="supervisionDirectory"/>
    <variable type="PositiveInteger" name="numFolds"/>
  </class>
  <class name="GaussianSVMWorkUnit" base="WorkUnit">
    <variable type="File" name="optimizerStateFile" shortName="opt"/>
    <variable type="String" name="inputDirectory" shortName="in"/>
    <variable type="String" name="supervisionDirectory" shortName="sup"/>
  </class>
  <class name="AverageDisulfideBondResults" base="WorkUnit">
    <variable type="File" name="directory" shortName="in"/>
  </class>
  <class name="DisulfideBondWorkUnit" base="WorkUnit">
    <variable type="String" name="inputDirectory" shortName="in"/>
    <variable type="String" name="supervisionDirectory" shortName="sup"/>
    <variable type="File" name="parameterFile" shortName="p"/>
    <variable type="String" name="learningMachineName" shortName="m"/>
    <variable type="Double" name="svmC"/>
    <variable type="Double" name="svmGamma"/>
    <variable type="PositiveInteger" name="x3Trees"/>
    <variable type="PositiveInteger" name="x3Attributes"/>
    <variable type="PositiveInteger" name="x3Splits"/>
    <variable type="PositiveInteger" name="windowSize" shortName="w"/>
  </class>
  <class name="AverageDirectoryScoresWorkUnit" base="WorkUnit">
    <variable type="File" name="directory" shortName="in"/>
  </class>
  <class name="CreateProteinFromPDBTestUnit" base="WorkUnit">
    <variable type="File" name="pdbFile" shortName="in"/>
  </class>
  <class name="ExportDisulfideBondFeaturesWorkUnit" base="WorkUnit">
    <variable type="File" name="inputDirectory" shortName="in"/>
    <variable type="File" name="supervisionDirectory" shortName="sup"/>
    <variable type="String" name="outputPrefix" shortName="o"/>
  </class>
  <class name="GenerateLargeProteinExperimentsWorkUnit" base="WorkUnit">
    <variable type="PositiveInteger" name="numParameters" shortName="p"/>
    <variable type="PositiveInteger" name="numExperiments" shortName="n"/>
  </class>
  <class name="PlotDisulfideBondResultsWorkUnit" base="WorkUnit">
    <variable type="File" name="directory"/>
  </class>
  <class name="CountNumDisulfideBridgePerProtein" base="WorkUnit">
    <variable type="File" name="directory"/>
  </class>

  <!-- END CysteinBox -->

  <!-- BEGIN LargeBox -->
  <class name="CompareSPXFromFileAndFromPDB" base="WorkUnit">
    <variable type="File" name="fromFile"/>
    <variable type="File" name="fromPdb"/>
    <variable type="File" name="output"/>
  </class>

  <class name="ProteinLearnerFunction" base="SimpleUnaryFunction">
    <variable type="VariablesEnumeration[Protein]" name="target"/>
    <variable type="String" name="proteinsPath"/>
    <variable type="Container[Protein]" name="trainingProteins"/>
    <variable type="Container[Protein]" name="testingProteins"/>
  </class>

  <class name="BestFirstSearchProteinLearner" base="WorkUnit">
    <variable type="Boolean" name="loadProteins"/>
    <variable type="String" name="proteinsPath" shortName="in"/>
    <variable type="VariablesEnumeration[Protein]" name="target" shortName="t"/>
    <variable type="String" name="optimizerFile" shortName="o"/>
    <variable type="String" name="learningMachine" shortName="m"/>
  </class>

  <class name="ExportPredictionWorkUnit" base="WorkUnit">
    <variable type="String" name="proteinDirectory" shortName="in"/>
  </class>

  <class name="ExportFeaturesWorkUnit" base="WorkUnit">
    <variable type="String" name="proteinDirectory" shortName="in"/>
  </class>

  <class name="SamplingFunction" base="SimpleUnaryFunction"/>
  <class name="TestBanditEDAOptimizer" base="WorkUnit"/>
  <!-- END LargeBox -->

  <!-- BEGIN BanditBox -->
  <class name="BanditCandidate" base="Object">
<!-- No need to appear in trace
    <variable type="Function" name="function"/>
    <variable type="Stream" name="examples"/> -->
    <variable type="Variable" name="parameters"/>
  </class>
  <class name="BanditFunction" base="SimpleUnaryFunction"/>
  <class name="DoubleVectorContainerSet" base="Object"/>

  <class name="ContainerBasedStream" base="Stream">
    <variable type="Container[Variable]" name="container"/>
    <variable type="PositiveInteger" name="nextIndex"/>
  </class>
  <class name="FunctionBasedStream" base="Stream">
    <variable type="Function" name="function"/>
<!--    <variable type="GenericVector[Variable]" name="inputs"/> -->
    <variable type="PositiveInteger" name="nextIndex"/>
  </class>
  <class name="BinaryFunctionBasedStream" base="FunctionBasedStream"/>
  <class name="PairBinaryFunctionBasedStream" base="BinaryFunctionBasedStream">
    <variable type="Type" name="elementsType"/>
<!--    <variable type="GenericVector[Variable]" name="outputs"/> -->
  </class>
  <class name="StreamBasedStandardDeviationNormalizer" base="Function">
    <variable type="GenericVector[Double]" name="standardDeviation"/>
  </class>

  <class name="ProteinBanditSampler" base="Sampler">
    <variable type="Sampler" name="decorated"/>
    <variable type="VariablesEnumeration[Protein]" name="target"/>
    <variable type="LargeProteinPredictorParameters" name="largePredictor"/>
<!--    <variable type="Container[Protein]" name="trainingProteins"/>
        <variable type="Container[Protein]" name="testingProteins"/>
        <variable type="DoubleVectorContainerSet" name="trainingFeaturesSet"/>
        <variable type="DoubleVectorContainerSet" name="testingFeaturesSet"/>
        <variable type="NormalizeDoubleVectorSet" name="normalizer"/>
        <variable type="Container[Variable]" name="trainingSupervisions"/>
        <variable type="Container[Variable]" name="testingSupervisions"/> -->
  </class>
  <class name="ProteinBanditTestFeatures" base="WorkUnit">
    <variable type="String" name="proteinsDirectory" shortName="in"/>
  </class>
  <class name="ProteinBanditTestSampler" base="WorkUnit">
    <variable type="String" name="proteinsPath" shortName="in"/>
  </class>
  <class name="ProteinBanditWorkUnit" base="WorkUnit">
    <variable type="String" name="proteinsPath" shortName="in"/>
    <variable type="VariablesEnumeration[Protein]" name="target" shortName="t"/>
  </class>

  <class name="TestParameterWorkUnit" base="WorkUnit">
    <variable type="String" name="proteinsPath" shortName="in"/>
  </class>
  <!-- END BanditBox -->


  <!-- BEGIN Perceptron WorkUnit -->
  <class name="SimplePerceptron" base="Function">
    <variable type="DenseDoubleVector[EnumValue, Double]" name="weights"/>
    <variable type="Double" name="bias"/>
  </class>
  <class name="SimplePerceptronBatchLearner" base="BatchLearner">
    <constructor/>
  </class>
  <class name="SimplePerceptronWorkUnit" base="WorkUnit"/>
  <!-- END Perceptron WorkUnit -->









<!-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
                   ESANN 2011 - F.Maes, J.Becker & L.Wehenkel
 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -->
  <template name="ESANN11ProteinPerception" base="ProteinPrimaryPerception">
    <parameter name="aaFeaturesEnumeration"/>
    <parameter name="pssmFeaturesEnumeration"/>
    <parameter name="ss3FeaturesEnumeration"/>
    <parameter name="ss8FeaturesEnumeration"/>
    <parameter name="saFeaturesEnumeration"/>
    <parameter name="drFeaturesEnumeration"/>
    <parameter name="stalFeaturesEnumeration"/>

    <variable type="Vector[DoubleVector[aaFeaturesEnumeration, Double]]" name="aaResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[aaFeaturesEnumeration], Double]]" name="aaAccumulator"/>

    <variable type="Vector[DoubleVector[pssmFeaturesEnumeration, Double]]" name="pssmResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[pssmFeaturesEnumeration], Double]]" name="pssmAccumulator"/>

    <variable type="Vector[DoubleVector[ss3FeaturesEnumeration, Double]]" name="ss3ResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[ss3FeaturesEnumeration], Double]]" name="ss3Accumulator"/>

    <variable type="Vector[DoubleVector[ss8FeaturesEnumeration, Double]]" name="ss8ResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[ss8FeaturesEnumeration], Double]]" name="ss8Accumulator"/>

    <variable type="Vector[DoubleVector[saFeaturesEnumeration, Double]]" name="saResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[saFeaturesEnumeration], Double]]" name="saAccumulator"/>

    <variable type="Vector[DoubleVector[drFeaturesEnumeration, Double]]" name="drResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[drFeaturesEnumeration], Double]]" name="drAccumulator"/>

    <variable type="Vector[DoubleVector[stalFeaturesEnumeration, Double]]" name="stalResidueFeatures"/>
    <variable type="Container[DenseDoubleVector[AddMissingToEnumeration[stalFeaturesEnumeration], Double]]" name="stalAccumulator"/>
  </template>

  <class name="ESANN11PredictorParameters" base="ProteinPredictorParameters"/>

  <class name="ESANN11WorkUnit" base="WorkUnit">
    <variable type="String" name="proteinsPath" shortName="in"/>
    <variable type="String" name="predictionPath" shortName="o"/>
    <!-- <variable type="VariablesEnumeration[Protein]" name="target" shortName="t"/> -->
    <variable type="PositiveInteger" name="numStages" shortName="n"/>
  </class>
<!-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -->





</library>
