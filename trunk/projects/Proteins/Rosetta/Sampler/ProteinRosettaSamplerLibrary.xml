<?xml version="1.0" encoding="UTF-8"?>

<library name="ProteinRosettaSampler" directory="Rosetta/Sampler">
  
  <class name="ResiduePairSampler" base="CompositeSampler">
    <constructor arguments="size_t numResidues"/>
    <variable type="PositiveInteger" name="numResidues" shortName="n" description="The number of residues to sample from."/>
  </class>
  
  <class name="SimpleResidueSampler" base="CompositeSampler">
    <constructor arguments="size_t numResidues"/>
    <variable type="PositiveInteger" name="numResidues" shortName="n" description="The number of residues to sample from."/>
  </class>
  
  <class name="ClamperSampler" base="CompositeSampler">
    <variable type="Double" name="minValue"/>
    <variable type="Double" name="maxValue"/>
    <variable type="Double" name="mean"/>
  </class>
  
  <class name="ProteinMoverSampler" base="CompositeSampler">
    <constructor arguments="DiscreteSamplerPtr classSampler, size_t numResidues"/>
    <constructor arguments="size_t numResidues"/>
  </class>
  
  <!-- general samplers -->
  <class name="GeneralProteinMoverSampler" base="CompositeSampler">
    <variable type="PositiveInteger" name="numResidues"/>
    <variable type="PositiveInteger" name="learningPolicy"/>
  </class>
  
  <class name="GeneralSimpleResidueSampler" base="CompositeSampler">
    <variable type="PositiveInteger" name="numResidues"/>
  </class>
  
  <class name="GeneralResiduePairSampler" base="CompositeSampler">
    <variable type="PositiveInteger" name="numResidues"/>
  </class>
  
  <!-- conditional samplers -->
  <class name="ConditionalProteinMoverSampler" base="CompositeSampler">
  </class>
  
  <class name="ConditionalSimpleResidueSampler" base="CompositeSampler">
  </class>
  
  <class name="ConditionalResiduePairSampler" base="CompositeSampler">
  </class>
  
</library>
