TODO LBCPP
==========

General
-------
- retirer les ifdef LBCPP_PROTEIN_ROSETTA
  - MoverSampler
    - reorganiser samplers
      - passer tous les samplers dans Data/ProteinMoverSampler
      - faire un tri dans les samplers et les simplifier
- Pose :
  - generation des features
  - stocker dedans pose et protein (permet la serialisation) et effectuer conversion de protein to pose quand
    pose == NULL, comment faire pour convertir pose to protein au bon moment? (-> fonction a appeler avant la serialisation?)
- reecrire ProteinOptimizationWorkUnit

v finir DistributableWorkUnit.h
  v trace --> transferer la trace des sous work units vers la WU principale (--> DistributedExecutionContext?)
- utiliser Distributed WU

- ajouter traces

Optim
-----
v tuner les parameters SA
  - relancer tuneSA_p_2
- essayer SA avec plusieurs noeuds ouverts
- mean shift

Apprentissage
-------------
- valider l'apprentissage au moyen de l'evaluation de la vraisemblance sur un echantillon de test
- relancer optim avec en et mtm, mais en variant les parametres du learner
- apprentissage online

TODO NIC3
=========
  
v lancer EDA sur optim_new_learn_all_it1

TODO Rosetta
============

- corriger conversion pose to protein (patche, --> plus dutilisation du DD)
  - ajouter des verifications avant deffectuer les transformations ou apres lapplication de movers?
  v pose to protein
  v protein to pose

v corriger probleme import pdb (Rosetta)

- corriger probleme hbond tripped









