/*-----------------------------------------.---------------------------------.
| Filename: Sequence.lh                    | Sequence base class             |
| Author  : Francis Maes                   |                                 |
| Started : 26/03/2010 18:05               |                                 |
`------------------------------------------/                                 |
                               |                                             |
                               `--------------------------------------------*/

#include "InterdependantVariableSet.lh"

namespace lbcpp
{

class Sequence : public InterdependantVariableSet
{
public:
  /*
  ** Sequence
  */
  virtual size_t getLength() const = 0;
  virtual void setLength(size_t newLength, bool clearPreviousContent = true) = 0;
  
  virtual String elementToString(size_t position) const = 0;
  virtual FeatureGeneratorPtr computeElementFeatures(size_t position) const = 0;

  /*
  ** Object
  */
  virtual String toString() const
  {
    size_t l = getLength();
    String res;
    for (size_t i = 0; i < l; ++i)
      res += elementToString(i);
    return res;
  }
};

typedef ReferenceCountedObjectPtr<Sequence> SequencePtr;

class SequenceElementFeatureFunction : public VariableFeatureFunction
{
public:
  SequenceElementFeatureFunction(SequencePtr sequence)
    : sequence(sequence) {}

  virtual size_t getNumVariables() const
    {return sequence->getLength();}

  virtual FeatureGeneratorPtr computeFeatures(size_t variableIndex) const
    {return sequence->computeElementFeatures(variableIndex);}

protected:
  SequencePtr sequence;
};

}; /* namespace lbcpp */
