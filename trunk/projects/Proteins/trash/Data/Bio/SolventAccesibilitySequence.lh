/*-----------------------------------------.---------------------------------.
| Filename: SolventAccessibilitySequence.lh| Solvent Accessibility  Sequence |
| Author  : Francis Maes                   |                                 |
| Started : 26/03/2010 18:49               |                                 |
`------------------------------------------/                                 |
                               |                                             |
                               `--------------------------------------------*/

#include "../Generic/ScoreSequence.lh"

namespace lbcpp
{

class SolventAccessibilitySequence : public ScoreSequence
{
public:
  virtual String elementToString(size_t position) const
  {
    double p = getExposedProbability(position);
    if (p <= 0.2)
      return T("B");
    if (p <= 0.4)
      return T("b");
    if (p <= 0.6)
      return T("-");
    if (p <= 0.8)
      return T("e");
    if (p <= 1.0)
      return T("E");
    jassert(false);
    return String::empty;
  }

  void setExposedProbability(size_t position, double probability)
  {
    jassert(probability >= 0.0 && probability <= 1.0);
    setScore(position, probability);
  }

  double getExposedProbability(size_t position) const
    {return getScore(position);}

  double getBuriedProbability(size_t position) const
    {return 1.0 - getScore(position);}
};

typedef ReferenceCountedObjectPtr<SolventAccessibilitySequence> SolventAccessibilitySequencePtr;

}; /* namespace lbcpp */
