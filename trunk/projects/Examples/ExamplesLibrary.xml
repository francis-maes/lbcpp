<?xml version="1.0" encoding="UTF-8"?>

<library name="Examples" dynamic="yes">

  <!-- Xor Regression Example -->
  <class name="LearnableFunction" base="Function" abstract="yes"/>
  <class name="NumericalLearnableFunction" base="LearnableFunction" abstract="yes"/>
  <class name="LearnableLinearFunction" base="NumericalLearnableFunction"/>
  <class name="LinearRegressor" base="FrameBasedFunction"/>
  
  <class name="XorFeatureGenerator" base="FeatureGenerator"/>
  <class name="XorRegressionExample" base="WorkUnit"/>

  <!-- WorkUnit Example -->
  <class name="SubWorkUnitExample" base="WorkUnit"/>
  <class name="WorkUnitExample" base="WorkUnit"/>
 
  <!-- Simple Introspection Example -->
  <class name="SimpleClass">
    <variable type="Boolean" name="myBool"/>
    <variable type="Integer" name="myInt"/>
    <variable type="Double" name="myDouble"/>
    <variable type="String" name="myString"/>
    <variable type="Object" name="myObject"/>
    <variable type="Variable" name="myVariable"/>
  </class>
  <class name="SimpleIntrospectionExample" base="WorkUnit"/>

  <!-- Missing Values Example -->
  <class name="VerySimpleClass" base="Object"/>
  <class name="MissingValuesExample" base="WorkUnit"/>

  <!-- Feature Generators -->
  <class name="FeatureGeneratorsExample" base="WorkUnit"/>

  <!-- Train/Test Learning Machine -->

  <enumeration name="LearningProblemEnum">
    <value name="MultiClass"/>
    <value name="MultiLabel"/>
  </enumeration>

  <class name="LearningProblem" abstract="yes"/>
  <class name="MultiClassClassificationProblem" base="LearningProblem"/>
  <class name="MultiLabelClassificationProblem" base="LearningProblem"/>
  
  <enumeration name="LearningMachineFamilyEnum">
    <value name="Linear"/>
    <value name="ExtraTree"/>
  </enumeration>

  <class name="LearningMachineFamily" abstract="yes"/>
  <class name="LinearLearningMachineFamily" base="LearningMachineFamily"/>
  <class name="ExtraTreeLearningMachineFamily" base="LearningMachineFamily"/>

  <class name="StackedSequentialInference" base="VectorSequentialInference"/>

  <class name="TrainTestLearningMachine" base="WorkUnit">
    <variable type="LearningProblemEnum" name="learningProblem" shortName="t"/>
    <variable type="LearningMachineFamilyEnum" name="learningMachineFamily" shortName="f"/>
    <variable type="PositiveInteger" name="numStacks" shortName="stack"/>
    <variable type="String" name="methodToUse" shortName="m"/>
    <variable type="File" name="trainingFile" shortName="train"/>
    <variable type="File" name="testingFile" shortName="test"/>
    <variable type="PositiveInteger" name="maxExamples" shortName="max"/>
  </class>
  
  <!-- Genetic Programming Example -->
  <class name="AgAddFunction" base="Function"/>
  <class name="AgSubFunction" base="Function"/>
  <class name="AgMultiplyFunction" base="Function"/>
  <class name="AgDivideFunction" base="Function"/>
  
  <class name="GeneticProgrammingExample" base="WorkUnit">
    <variable type="PositiveInteger" name="numInputVariables"/>
    <variable type="PositiveInteger" name="numData"/>
    <variable type="PositiveInteger" name="numTrees"/>
    <variable type="PositiveInteger" name="numGenerations"/>
    <variable type="Double" name="probOfCrossOver"/>
    <variable type="Double" name="probOfReproduction"/>
    <variable type="Double" name="probOfMutation"/>
  </class>
</library>
