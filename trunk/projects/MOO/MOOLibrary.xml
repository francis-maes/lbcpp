<?xml version="1.0" encoding="UTF-8"?>

<library name="MOO" dynamic="yes">

  <class name="ProblemFromSharkObjectiveFunction" base="Problem" abstract="yes"/>

  <class name="SphereProblem" base="ProblemFromSharkObjectiveFunction"/>  
  <class name="AckleyProblem" base="ProblemFromSharkObjectiveFunction"/>
  <class name="GriewangkProblem" base="ProblemFromSharkObjectiveFunction"/>
  <class name="RastriginProblem" base="ProblemFromSharkObjectiveFunction"/>
  <class name="RosenbrockProblem" base="ProblemFromSharkObjectiveFunction"/>
  <class name="RosenbrockRotatedProblem" base="ProblemFromSharkObjectiveFunction"/>

  <class name="ZDTMOProblem" base="ProblemFromSharkObjectiveFunction" abstract="yes"/>
  <class name="ZDT1MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT2MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT3MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT4MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT6MOProblem" base="ZDTMOProblem"/>

  <class name="MOOSandBox" base="WorkUnit">
    <variable type="PositiveInteger" name="numDimensions"/>
    <variable type="PositiveInteger" name="numEvaluations"/>
    <variable type="PositiveInteger" name="verbosity"/>
  </class>
  
  <class name="TestRandomForestUncertainties" base="WorkUnit">
    <variable type="PositiveInteger" name="numSamples"/>
    <variable type="PositiveInteger" name="numTrees"/>
    <variable type="PositiveInteger" name="numObjectives"/>
    <variable type="PositiveInteger" name="randomSeed"/>
  </class>

  <class name="SBOExperiments" base="WorkUnit">
    <variable type="PositiveInteger" name="numEvaluations" shortName="n" description="Number of evaluations [1000]"/>
    <variable type="Boolean" name="runBaseline" description="Run baseline methods [false]"/>
    <variable type="PositiveInteger" name="populationSize" description="Population size for baseline methods and inner optimization of surrogate-based methods [20]"/>
    <variable type="Boolean" name="runRandomForests" description="Run surrogate-based optimization with random forests [false]"/>
    <variable type="Boolean" name="runXT" description="Run surrogate-based optimization with extremely randomized trees [false]"/>
    <variable type="Boolean" name="uniformSampling" description="Initialize surrogate-based optimizers with uniform sampling [false]"/>
    <variable type="Boolean" name="latinHypercubeSampling" description="Initialize surrogate-based optimizers with latin hypercube sampling [false]"/>
    <variable type="PositiveInteger" name="numTrees" shortName="t" description="Number of trees in surrogate models [100]"/>
    <variable type="Double" name="optimism" shortName="o" description="Level of optimism for optimistic selection criterion [2.0]"/>
    <variable type="Double" name="evaluationPeriod" description="Number of seconds between evaluations in function of CPU time [10.0]"/>
    <variable type="Double" name="evaluationPeriodFactor" description="After each evaluation for CPU time, evaluationPeriod is multiplied by this factor [1.0]"/>
    <variable type="PositiveInteger" name="numDims" shortName="d" description="Dimensionality of test problems [6]"/>
    <variable type="PositiveInteger" name="numRuns" shortName="r" description="Number of times to run each method on each problem [10]"/>
    <variable type="PositiveInteger" name="verbosity" description="Verbosity of output, verbosity >= 2 gives curves for each run [1]"/>
    <variable type="PositiveInteger" name="optimizerVerbosity" description="Verbosity of optimizers [1]"/>
    <variable type="PositiveInteger" name="problemIdx" shortName="p" description="The problem to run (1-6) [1]"/>
  </class>
  <!-- FQI Based Solver -->
  <class name="FQIBasedSolver" base="PopulationBasedSolver" abstract="yes"/>
  
  <class name="ScalarVectorSearchState" base="SearchState">
    <variable type="ScalarVectorDomain" name="vectorDomain"/>
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,Double]" name="vector"/>
  </class>
  <class name="ScalarVectorFQIBasedSolver" base="FQIBasedSolver"/>
  
</library>
