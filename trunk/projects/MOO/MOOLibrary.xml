<?xml version="1.0" encoding="UTF-8"?>

<library name="MOO" dynamic="yes">

  <class name="ProblemFromSharkObjectiveFunction" base="Problem" abstract="yes"/>

  <class name="SingleObjectiveSharkMOProblem" base="ProblemFromSharkObjectiveFunction" abstract="yes"/>
  <class name="SphereProblem" base="SingleObjectiveSharkMOProblem"/>  
  <class name="AckleyProblem" base="SingleObjectiveSharkMOProblem"/>
  <class name="GriewangkProblem" base="SingleObjectiveSharkMOProblem"/>
  <class name="RastriginProblem" base="SingleObjectiveSharkMOProblem"/>
  <class name="RosenbrockProblem" base="SingleObjectiveSharkMOProblem"/>
  <class name="RosenbrockRotatedProblem" base="SingleObjectiveSharkMOProblem"/>

  <class name="ZDTMOProblem" base="ProblemFromSharkObjectiveFunction" abstract="yes"/>
  <class name="ZDT1MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT2MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT3MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT4MOProblem" base="ZDTMOProblem"/>
  <class name="ZDT6MOProblem" base="ZDTMOProblem"/>

  <class name="MOOSandBox" base="WorkUnit">
    <variable type="PositiveInteger" name="numEvaluations"/>
    <variable type="PositiveInteger" name="verbosity"/>
  </class>
  
  <class name="TestRandomForestUncertainties" base="WorkUnit">
    <variable type="PositiveInteger" name="numSamples"/>
    <variable type="PositiveInteger" name="numTrees"/>
    <variable type="PositiveInteger" name="numObjectives"/>
    <variable type="PositiveInteger" name="randomSeed"/>
  </class>
  
  <!-- FQI Based Solver -->
  <class name="FQIBasedSolver" base="PopulationBasedSolver" abstract="yes"/>
  
  <class name="ScalarVectorSearchState" base="SearchState">
    <variable type="ScalarVectorDomain" name="vectorDomain"/>
    <variable type="DenseDoubleVector[PositiveIntegerEnumeration,Double]" name="vector"/>
  </class>
  <class name="ScalarVectorFQIBasedSolver" base="FQIBasedSolver"/>
  
</library>
