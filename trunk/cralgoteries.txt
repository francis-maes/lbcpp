
 
* Objectif: avoir des tables sous-spécifiées
* Objectif: avoir un EDA qui marche


 
Objectif: avoir un classifieur binaire et un sgd qui s'emboitent bien
 * New Lua File: Loss.lua --> transcript lbcpp losses
 * derivable: Gerer les gradient et les DoubleVector 
 * New 'goal' extension to integrate inference and learning

* DoubleVector: implement index, newindex, len functions (==> metatable problem)
* New lua function: DoubleVector::argmax
  => DoubleVector start at index 1

* Garder les commentaires dans le source-to-source


Proteins:
 * Ajouter des features de segments

Core:
 * Renommer MultiLinearLearnableFunction en ParallelLearnableFunction<T>
 * MapContainerFunction: la transformer en ProxyFunction, faire la version parallele, absorber le Apply des container

Explorer:
 * LogScale dans les curves
 * Systeme d'export/import de fichiers general
 * Export as GnuPlot Data File
 * Export as CSV
 * ExecutionTrace: refermer les noeuds au fur et à mesure
 * ExecutionTrace: Améliorer le système de colonnes
 * Explorer: Faire un mecanisme general pour la gestion des FileFormat, utiliser sur les sgf par exemple
 * Explorer: Faire une vrai classe de base ObjectComponent qui absorbe ComponentWithPreferedSize / VariableSelector et qui gere les differents cas:
     topLevel | insideTree | oneLineComponent
 * Explorer: interfaces 
     - Importer: String -> UIImporter: (getName(), doesRecognizeFile(), perform())
     - Exporter: Type -> UIExporter: (getName(), getDefaultExtension(), perform())
     - Command: Type -> UICommand: (getIcon(), getName(), perform())
     - TreeItems: Type -> UITreeItemBuilder: (getIcon(), getToolTip(), getAttributes(), perform())
     - Component: Type -> UIComponent: (preferedSize, variableSelector, parameters, ...)

Go:
 * integrate's olivier last modifs
 * Nouvelles features
 * Courbes dans l'evaluateur
 * GoPatterns
 * Utilisation du manager
