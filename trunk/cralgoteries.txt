ok Test de Regression avec least-squares linear regression

reorganisation des fichiers Function

CRPP - Gros

* Policies:
  * SarsaZero, QLearning, MonteCarloControl, OlPomdp
  * CRank, CRankPost
  * ConsoleLogger, TableLogger
  * Bridge static <-> dynamique
  * policyRun inline

* Task, Tables

* Functions:
  - L1Regularizer
  - BiasArchitecture
  - Loss de rankings
  - ScalarDerivableArchitecturesDotProduct
  - TransferArchitecture

* SWIG
* Doxygen

CRPP - Petit
* Functions: splitter les fichiers
* FeatureDictionary: les std::vector en dur, pas de pointeur
* FeatureVisitor: appliquer un hierarchie similaire a ContinuousFunctions ?
* shared_ptr ChoicePtr  ?
  . Leak dans PolicyToStaticCallback
  . voir aussi nieme::CRAlgorithmAction

GENERATION:
* PrettyPrinter: if-else: sauter a la ligne pour les deux blocs
* variable statique dans les cr-algos ?
* reference en variable locale dans un CR-algo => transformer en pointeur
* crAlgorithm: chooses inside if/switch/while/do/for/try/cases
* Faire le tri des local-scope concernŽe par les choose et n'inclure que ceux la dans la classe CR-algorithm gŽnŽrŽe
     => pas besoin de faire des ctor de copie et des toString pour tout le monde comme ca
* remettre policyRun
* Generer un operateur de stream dans chaque classe, si il n'existe pas
* cralgo-cpp: Mettre un reward par default equivalent a la premiere actionValue de chaque choose
* BUG: Une struct qui ne se finit pas par ; dans une classe => fait peter le assert(prototype) de synopsis
* BUG: => faire marcher "size_t nodeIndex = choose<size_t>(closedNodes, nodeValues);
    SearchNode& node = searchSpace.get(nodeIndex);"

ERREURS/WARNINGS:
  * Warning is le resultat d'un featureGenerator ou d'un crAlgorithm n'est pas utilise. Proposer l'utilisation de 'featureCall' ou 'crAlgorithmCall'.
  * Message d'erreur si le type d'un choice dans featureGenerator ou actionValue ne match pas le type du choose correspondant
  * Warning dans le compilo si le resultat du choose n'est pas utilise
  * Error: "using local variable in cr-algorithm reference", si on a un "cralgo void toto(int& i)" et qu'on appelle "int i; return toto(i);" 
  * Si on instancie une classe dont le compiler connait la definition, checker qu'il y a bien un operator de stream

GROS:
 * clarifier les CRAlgoVisitor
 * crAlgorithmCall
 * gestion des options

CRALGOS:
 * semi-supervised classification
 * active learning
 * feature-group selection
 * multi-label classification
 * ...
