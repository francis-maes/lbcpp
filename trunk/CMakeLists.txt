PROJECT(LBCpp)
cmake_minimum_required(VERSION 2.6)

IF(UNIX)
  IF(APPLE)
  ELSE(APPLE)
    ADD_DEFINITIONS(-DLINUX)
	SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
  ENDIF(APPLE)
ENDIF(UNIX)


###
### C++ Introspection support
###
ADD_SUBDIRECTORY(introgen)

# generate a .cpp file from an XML introspection file
# ex: GENERATE_INTROSPECTION_CODE(in.xml out.cpp) 
MACRO (GENERATE_INTROSPECTION_CODE INPUT OUTPUT)
  GET_TARGET_PROPERTY(INTROSPECTION_GENERATOR_COMMAND IntrospectionGenerator LOCATION)
  ADD_CUSTOM_COMMAND(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${OUTPUT}
    COMMAND ${INTROSPECTION_GENERATOR_COMMAND} ${CMAKE_CURRENT_SOURCE_DIR}/${INPUT} ${CMAKE_CURRENT_BINARY_DIR}/${OUTPUT} ${CMAKE_CURRENT_SOURCE_DIR}
    MAIN_DEPENDENCY ${INPUT}
    DEPENDS ${INPUT} ${INTROSPECTION_GENERATOR_COMMAND}
    COMMENT "Generating C++ Introspection code ${OUTPUT}."
  )
ENDMACRO(GENERATE_INTROSPECTION_CODE)


MACRO(SOURCE_SUB_GROUP ROOT_NAME SUB_NAME) # other args
  IF (WIN32)
    SOURCE_GROUP(${ROOT_NAME}\\${SUB_NAME} ${ARGN})
  ELSE (WIN32)
    SOURCE_GROUP(${ROOT_NAME}/${SUB_NAME} ${ARGN})
  ENDIF (WIN32)
ENDMACRO(SOURCE_SUB_GROUP)


MACRO(SOURCE_SUB_GROUP2 ROOT_NAME SUB_NAME SUB_NAME2) # other args
  IF (WIN32)
    SOURCE_GROUP(${ROOT_NAME}\\${SUB_NAME}\\${SUB_NAME2} ${ARGN})
  ELSE (WIN32)
    SOURCE_GROUP(${ROOT_NAME}/${SUB_NAME}/${SUB_NAME2} ${ARGN})
  ENDIF (WIN32)
ENDMACRO(SOURCE_SUB_GROUP2)

ADD_SUBDIRECTORY(juce)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(projects)

OPTION(LBCPP_EXAMPLES "Include examples into the project" OFF)
IF (LBCPP_EXAMPLES)
  ADD_SUBDIRECTORY(examples)
ENDIF(LBCPP_EXAMPLES)

OPTION(LBCPP_EXPLORER "Include explorer into the project" ON)
IF (LBCPP_EXPLORER)
  ADD_SUBDIRECTORY(explorer)
ENDIF(LBCPP_EXPLORER)

OPTION(LBCPP_DOCUMENTATION "Include documentation into the project" OFF)
IF (LBCPP_DOCUMENTATION)
  ADD_SUBDIRECTORY(dox)
ENDIF (LBCPP_DOCUMENTATION)
